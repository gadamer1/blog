{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\postList.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { GET_POSTS_REQUEST } from \"../reducers/post/actions\";\n\nconst PostList = () => {\n  const {\n    isPostLoading\n  } = useSelector(state => state.post.loadingStates);\n  const posts = useSelector(state => state.post.posts);\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"));\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, posts.map(post => {\n      return __jsx(\"div\", {\n        key: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, post.title), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, post.category), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, post.date));\n    }));\n  }\n};\n\nPostList.getInitialProps = ctx => {\n  ctx.store.dispatch({\n    type: GET_POSTS_REQUEST\n  });\n  return {};\n};\n\nexport default PostList;","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/postList.tsx"],"names":["React","useSelector","GET_POSTS_REQUEST","PostList","isPostLoading","state","post","loadingStates","posts","map","_id","title","category","date","getInitialProps","ctx","store","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,iBAAT,QAAkC,0BAAlC;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,WAAW,CAClCI,KAAD,IAAkBA,KAAK,CAACC,IAAN,CAAWC,aADM,CAArC;AAGA,QAAMC,KAAK,GAAGP,WAAW,CAAEI,KAAD,IAAkBA,KAAK,CAACC,IAAN,CAAWE,KAA9B,CAAzB;;AACA,MAAIJ,aAAJ,EAAmB;AACjB,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CADF;AAKD,GAND,MAMO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,KAAK,CAACC,GAAN,CAAUH,IAAI,IAAI;AACjB,aACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMJ,IAAI,CAACK,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAML,IAAI,CAACM,QAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMN,IAAI,CAACO,IAAX,CAHF,CADF;AAOD,KARA,CADH,CADF;AAaD;AACF,CA1BD;;AA4BAV,QAAQ,CAACW,eAAT,GAA2BC,GAAG,IAAI;AAChCA,EAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,IAAAA,IAAI,EAAEhB;AADW,GAAnB;AAIA,SAAO,EAAP;AACD,CAND;;AAQA,eAAeC,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { GET_POSTS_REQUEST } from \"../reducers/post/actions\";\r\nimport { store } from \"../reducers/types\";\r\n\r\nconst PostList = () => {\r\n  const { isPostLoading } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const posts = useSelector((state: store) => state.post.posts);\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중입니다.</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        {posts.map(post => {\r\n          return (\r\n            <div key={post._id}>\r\n              <div>{post.title}</div>\r\n              <div>{post.category}</div>\r\n              <div>{post.date}</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPostList.getInitialProps = ctx => {\r\n  ctx.store.dispatch({\r\n    type: GET_POSTS_REQUEST\r\n  });\r\n\r\n  return {};\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}