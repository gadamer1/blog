{"ast":null,"code":"import produce from \"immer\";\nimport { GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, MAKE_POST_REQUEST, MAKE_POST_SUCCESS, MAKE_POST_FAILURE } from \"./actions\";\nconst initialState = {\n  posts: null,\n  currentPost: null,\n  loadingStates: {\n    isPostLoading: false,\n    isPosting: false,\n    isPostingSuccess: false,\n    isPostsLoading: false\n  },\n  metaStates: {\n    getPostStatusCode: 0,\n    getPostsStatusCode: 0,\n    postStautsCode: 0\n  }\n};\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case GET_POSTS_REQUEST:\n        {\n          draft.loadingStates.isPostLoading = true;\n          break;\n        }\n\n      case GET_POSTS_SUCCESS:\n        {\n          draft.loadingStates.isPostLoading = false;\n          draft.posts = action.result;\n          break;\n        }\n\n      case GET_POSTS_FAILURE:\n        {\n          draft.loadingStates.isPostLoading = false;\n          break;\n        }\n\n      case MAKE_POST_REQUEST:\n        {\n          draft.loadingStates.isPosting = true;\n          break;\n        }\n\n      case MAKE_POST_SUCCESS:\n        {\n          draft.loadingStates.isPostingSuccess = true;\n          draft.loadingStates.isPosting = false;\n          draft.posts = action.result;\n          break;\n        }\n\n      case MAKE_POST_FAILURE:\n        {\n          draft.loadingStates.isPosting = false;\n          draft.loadingStates.isPostingSuccess = false;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"module"}