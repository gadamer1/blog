{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { LOGIN_REQUEST } from \"../reducers/user/actions\";\nimport Router from \"next/router\"; // loading component\n\nimport CircularProgressComponent from \"../utils/Components/CircularProgressComponent\"; // validate email\n\nimport validateEmailInput from \"../utils/validateEmailInput\";\nimport IsAleadyLoggedIn from \"../Components/IsAleadyLoggedIn\";\nconst useStyles = makeStyles(theme => createStyles({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles({});\n  const {\n    isLoging\n  } = useSelector(state => state.user.loadingStates);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user.metaStates);\n  const dispatch = useDispatch();\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(\"\");\n  useEffect(() => {\n    if (isLoggedIn) {\n      Router.push(\"/\");\n    }\n  }, [isLoggedIn]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let validate = true;\n\n    if (!validateEmailInput(email)) {\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\n      validate = false;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailError(\"이메일 주소를 입력해주세요\");\n      validate = false;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordError(\"비밀번호를 입력해주세요\");\n      validate = false;\n    }\n\n    if (validate) {\n      dispatch({\n        type: LOGIN_REQUEST,\n        payload: {\n          email,\n          password\n        }\n      });\n    }\n  };\n\n  const handleEmail = event => {\n    if (emailError) {\n      setEmailError(\"\");\n    }\n\n    setEmail(event.target.value);\n  };\n\n  const handlePassword = event => {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n\n    setPassword(event.target.value);\n  };\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(IsAleadyLoggedIn, null) : __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, __jsx(CssBaseline, null), __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(TextField, {\n    error: !!emailError,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    value: email,\n    onChange: handleEmail,\n    helperText: emailError\n  }), __jsx(TextField, {\n    error: !!passwordError,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: handlePassword,\n    helperText: passwordError\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"remember\",\n      color: \"primary\"\n    }),\n    label: \"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC \\uC720\\uC9C0\"\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: isLoging\n  }, isLoging ? __jsx(CircularProgressComponent, null) : __jsx(Typography, null, \"\\uB85C\\uADF8\\uC778\")), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: true\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"/signup\",\n    variant: \"body2\"\n  }, \"계정이 없으신가요? 회원가입\")))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}