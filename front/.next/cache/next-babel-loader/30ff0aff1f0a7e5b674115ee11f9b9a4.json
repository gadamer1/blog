{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\post\\\\[category].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\nimport { Link, Grid, Typography, Divider } from \"@material-ui/core\";\n\nvar Post = function Post() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      posts = _useSelector.posts;\n\n  var router = useRouter();\n  var category = router.query.category;\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, category)), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), posts && posts.map(function (post) {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: \"/post/\".concat(category, \"/\").concat(post.title),\n      key: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, post.title), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, post.nickname))));\n  })));\n};\n\nPost.getInitialProps = function _callee(ctx) {\n  var category;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          category = ctx.query.category;\n          ctx.store.dispatch({\n            type: GET_POSTS_REQUEST,\n            payload: {\n              category: category\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/post/[category].tsx"],"names":["React","useRouter","useSelector","GET_POSTS_REQUEST","Link","Grid","Typography","Divider","Post","state","post","posts","router","category","query","map","title","_id","nickname","getInitialProps","ctx","store","dispatch","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,mBAAhD;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACCN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAxB;AAAA,GAAD,CADZ;AAAA,MACTC,KADS,gBACTA,KADS;;AAEjB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AAFiB,MAGTY,QAHS,GAGID,MAAM,CAACE,KAHX,CAGTD,QAHS;AAIjB,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,QAAb,CADF,CADF,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGF,KAAK,IACJA,KAAK,CAACI,GAAN,CAAU,UAAAL,IAAI,EAAI;AAChB,WACE,4BACE,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWG,QAAX,cAAuBH,IAAI,CAACM,KAA5B,CAAV;AAA+C,MAAA,GAAG,EAAEN,IAAI,CAACO,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMP,IAAI,CAACM,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,IAAI,CAACQ,QAAX,CAFF,CADF,CADF,CADF;AAUD,GAXD,CANJ,CADF,CADF;AAuBD,CA3BD;;AA6BAV,IAAI,CAACW,eAAL,GAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbP,UAAAA,QADa,GACAO,GAAG,CAACN,KADJ,CACbD,QADa;AAErBO,UAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,YAAAA,IAAI,EAAEpB,iBADW;AAEjBqB,YAAAA,OAAO,EAAE;AAAEX,cAAAA,QAAQ,EAARA;AAAF;AAFQ,WAAnB;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeL,IAAf","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\r\nimport { store } from \"../../reducers/types\";\r\nimport { Link, Grid, Typography, Divider } from \"@material-ui/core\";\r\n\r\nconst Post = () => {\r\n  const { posts } = useSelector((state: store) => state.post);\r\n  const router = useRouter();\r\n  const { category } = router.query;\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography>{category}</Typography>\r\n        </Grid>\r\n        <Divider />\r\n        {posts &&\r\n          posts.map(post => {\r\n            return (\r\n              <>\r\n                <Link href={`/post/${category}/${post.title}`} key={post._id}>\r\n                  <Grid item xs={6}>\r\n                    <div>{post.title}</div>\r\n                    <div>{post.nickname}</div>\r\n                  </Grid>\r\n                </Link>\r\n              </>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async ctx => {\r\n  const { category } = ctx.query;\r\n  ctx.store.dispatch({\r\n    type: GET_POSTS_REQUEST,\r\n    payload: { category }\r\n  });\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}