{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\post\\\\[category]\\\\[title].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FETCH_POST_REQUEST, DELETE_POST_REQUEST, DELETE_POST_FAILURE } from \"../../../reducers/post/actions\";\nimport { Grid, Typography, Chip, Button } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { Face as FaceIcon } from \"@material-ui/icons\";\nimport Router from \"next/router\";\nimport Breadcrumb from \"../../../Components/BreadCrumb\";\nimport CustomMarkdown from \"../../../Components/CustomMarkdown\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: \"80%\",\n      backgroundColor: theme.palette.background.paper,\n      justifyContent: \"center\",\n      paddingLeft: \"20px\"\n    },\n    container: {\n      marginBottom: \"200px\"\n    },\n    title: {\n      border: \"1px solid black\"\n    }\n  });\n});\n\nvar Post = function Post() {\n  var classes = useStyles({});\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentPost = _useSelector.currentPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPostLoading = _useSelector2.isPostLoading,\n      isPostDeleting = _useSelector2.isPostDeleting,\n      isPostDeleteSuccess = _useSelector2.isPostDeleteSuccess;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector3.me;\n\n  var _useRouter$query = useRouter().query,\n      category = _useRouter$query.category,\n      title = _useRouter$query.title;\n  useEffect(function () {\n    if (isPostDeleteSuccess) {\n      dispatch({\n        type: DELETE_POST_FAILURE\n      });\n      Router.push(\"/post/\".concat(category));\n    }\n  }, [isPostDeleteSuccess]);\n\n  var _onClickNickname = function _onClickNickname(nickname) {\n    return function () {\n      Router.push(\"/profile/\".concat(nickname));\n    };\n  };\n\n  var _onClickDeleteButton = function _onClickDeleteButton(e) {\n    e.preventDefault();\n    dispatch({\n      type: DELETE_POST_REQUEST,\n      payload: {\n        nickname: currentPost.nickname,\n        userId: me._id\n      }\n    });\n  };\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4!\"));\n  } else if (currentPost) {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Breadcrumb, {\n      category: category,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), __jsx(Grid, {\n      container: true,\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\", __jsx(Typography, {\n      variant: \"h4\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, currentPost.title))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Chip, {\n      icon: __jsx(FaceIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      onClick: _onClickNickname(currentPost.nickname),\n      label: currentPost.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), me && me._id === currentPost._id && __jsx(Button, {\n      color: \"secondary\",\n      onClick: _onClickDeleteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), __jsx(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, currentPost.Date))), currentPost && __jsx(CustomMarkdown, {\n      source: currentPost.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\uD3EC\\uC2A4\\uD2B8\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\");\n  }\n};\n\nPost.getInitialProps = function (ctx) {\n  var _ctx$query = ctx.query,\n      title = _ctx$query.title,\n      category = _ctx$query.category;\n  ctx.store.dispatch({\n    type: FETCH_POST_REQUEST,\n    payload: {\n      title: title,\n      category: category\n    }\n  });\n  return {};\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/post/[category]/[title].tsx"],"names":["React","useEffect","useRouter","useSelector","useDispatch","FETCH_POST_REQUEST","DELETE_POST_REQUEST","DELETE_POST_FAILURE","Grid","Typography","Chip","Button","makeStyles","createStyles","Face","FaceIcon","Router","Breadcrumb","CustomMarkdown","useStyles","theme","root","width","backgroundColor","palette","background","paper","justifyContent","paddingLeft","container","marginBottom","title","border","Post","classes","dispatch","state","post","currentPost","loadingStates","isPostLoading","isPostDeleting","isPostDeleteSuccess","user","me","query","category","type","push","_onClickNickname","nickname","_onClickDeleteButton","e","preventDefault","payload","userId","_id","Date","body","getInitialProps","ctx","store"],"mappings":"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","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_POST_REQUEST,\r\n  FETCH_POST_REQUEST,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_FAILURE\r\n} from \"../../../reducers/post/actions\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport { Grid, Typography, Chip, Button } from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Face as FaceIcon } from \"@material-ui/icons\";\r\nimport Router from \"next/router\";\r\nimport Breadcrumb from \"../../../Components/BreadCrumb\";\r\nimport CustomMarkdown from \"../../../Components/CustomMarkdown\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"80%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      justifyContent: \"center\",\r\n      paddingLeft: \"20px\"\r\n    },\r\n    container: {\r\n      marginBottom: \"200px\"\r\n    },\r\n    title: {\r\n      border: \"1px solid black\"\r\n    }\r\n  })\r\n);\r\n\r\nconst Post = () => {\r\n  const classes = useStyles({});\r\n  const dispatch = useDispatch();\r\n  const { currentPost } = useSelector((state: store) => state.post);\r\n  const { isPostLoading, isPostDeleting, isPostDeleteSuccess } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const { me } = useSelector((state: store) => state.user);\r\n  const { category, title } = useRouter().query;\r\n\r\n  useEffect(() => {\r\n    if (isPostDeleteSuccess) {\r\n      dispatch({\r\n        type: DELETE_POST_FAILURE\r\n      });\r\n      Router.push(`/post/${category}`);\r\n    }\r\n  }, [isPostDeleteSuccess]);\r\n\r\n  const _onClickNickname = nickname => () => {\r\n    Router.push(`/profile/${nickname}`);\r\n  };\r\n\r\n  const _onClickDeleteButton = e => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: DELETE_POST_REQUEST,\r\n      payload: {\r\n        nickname: currentPost.nickname,\r\n        userId: me._id\r\n      }\r\n    });\r\n  };\r\n\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중 입니다!</div>\r\n      </>\r\n    );\r\n  } else if (currentPost) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Breadcrumb category={category} title={title} />\r\n        <Grid container className={classes.container}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" color=\"secondary\">\r\n              제목\r\n              <Typography variant=\"h4\" color=\"primary\">\r\n                {currentPost.title}\r\n              </Typography>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ float: \"right\" }}>\r\n            <Chip\r\n              icon={<FaceIcon />}\r\n              onClick={_onClickNickname(currentPost.nickname)}\r\n              label={currentPost.nickname}\r\n            />\r\n            {me && me._id === currentPost._id && (\r\n              <Button color=\"secondary\" onClick={_onClickDeleteButton} />\r\n            )}\r\n            <Typography color=\"textSecondary\">{currentPost.Date}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {currentPost && <CustomMarkdown source={currentPost.body} />}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>포스트가 존재하지 않습니다</div>;\r\n  }\r\n};\r\n\r\nPost.getInitialProps = ctx => {\r\n  const { title, category } = ctx.query;\r\n\r\n  ctx.store.dispatch({\r\n    type: FETCH_POST_REQUEST,\r\n    payload: {\r\n      title,\r\n      category\r\n    }\r\n  });\r\n  return {};\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}