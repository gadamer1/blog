{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { LOGIN_REQUEST } from \"../reducers/user/actions\";\nimport Router from \"next/router\"; // loading component\n\nimport CircularProgressComponent from \"../utils/Components/CircularProgressComponent\"; // validate email\n\nimport validateEmailInput from \"../utils/validateEmailInput\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  });\n});\n\nvar Login = function Login() {\n  var classes = useStyles({});\n\n  var _useSelector = useSelector(function (state) {\n    return state.user.loadingStates;\n  }),\n      isLoging = _useSelector.isLoging;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user.metaStates;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      emailError = _useState2[0],\n      setEmailError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  useEffect(function () {\n    if (isLoggedIn) {\n      Router.push(\"/\");\n    }\n  }, [isLoggedIn]);\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var validate = true;\n\n    if (!validateEmailInput(email)) {\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\n      validate = false;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailError(\"이메일 주소를 입력해주세요\");\n      validate = false;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordError(\"비밀번호를 입력해주세요\");\n      validate = false;\n    }\n\n    if (validate) {\n      dispatch({\n        type: LOGIN_REQUEST,\n        payload: {\n          email: email,\n          password: password\n        }\n      });\n    }\n  };\n\n  var handleEmail = function handleEmail(event) {\n    if (emailError) {\n      setEmailError(\"\");\n    }\n\n    setEmail(event.target.value);\n  };\n\n  var handlePassword = function handlePassword(event) {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n\n    setPassword(event.target.value);\n  };\n\n  return __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !!emailError,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    value: email,\n    onChange: handleEmail,\n    helperText: emailError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(TextField, {\n    error: !!passwordError,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: handlePassword,\n    helperText: passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }),\n    label: \"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC \\uC720\\uC9C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: isLoging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, isLoging ? __jsx(CircularProgressComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\")), __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\")), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"계정이 없으신가요? 회원가입\"))))));\n};\n\nLogin.getInitialProps = function _callee(context) {\n  var state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          state = context.store.getState();\n\n          if (state.user.metaStates.isLoggedIn) {\n            Router.push(\"/\");\n          }\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/login.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","LockOutlinedIcon","Typography","makeStyles","createStyles","Container","LOGIN_REQUEST","Router","CircularProgressComponent","validateEmailInput","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","state","user","loadingStates","isLoging","metaStates","isLoggedIn","dispatch","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","push","handleSubmit","event","preventDefault","validate","trim","type","payload","handleEmail","target","value","handlePassword","getInitialProps","context","store","getState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { LOGIN_REQUEST } from \"../reducers/user/actions\";\r\nimport { store } from \"../reducers/types\";\r\nimport { JWTlogin, JWTwithAuthSync } from \"../utils/token\";\r\nimport Router from \"next/router\";\r\n// loading component\r\nimport CircularProgressComponent from \"../utils/Components/CircularProgressComponent\";\r\n\r\n// validate email\r\nimport validateEmailInput from \"../utils/validateEmailInput\";\r\nimport { NextPageContext, NextPage } from \"next\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  })\r\n);\r\n\r\nconst Login = () => {\r\n  const classes = useStyles({});\r\n  const { isLoging } = useSelector((state: store) => state.user.loadingStates);\r\n  const { isLoggedIn } = useSelector((state: store) => state.user.metaStates);\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    let validate = true;\r\n    if (!validateEmailInput(email)) {\r\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\r\n      validate = false;\r\n    }\r\n    if (email.trim() === \"\") {\r\n      setEmailError(\"이메일 주소를 입력해주세요\");\r\n      validate = false;\r\n    }\r\n    if (password.trim() === \"\") {\r\n      setPasswordError(\"비밀번호를 입력해주세요\");\r\n      validate = false;\r\n    }\r\n    if (validate) {\r\n      dispatch({\r\n        type: LOGIN_REQUEST,\r\n        payload: {\r\n          email,\r\n          password\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (emailError) {\r\n      setEmailError(\"\");\r\n    }\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePassword = event => {\r\n    if (passwordError) {\r\n      setPasswordError(\"\");\r\n    }\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            error={!!emailError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleEmail}\r\n            helperText={emailError}\r\n          />\r\n          <TextField\r\n            error={!!passwordError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"비밀번호\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handlePassword}\r\n            helperText={passwordError}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"로그인 상태 유지\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={isLoging}\r\n          >\r\n            {isLoging ? (\r\n              <CircularProgressComponent />\r\n            ) : (\r\n              <Typography>로그인</Typography>\r\n            )}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                비밀번호를 잊으셨나요?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"계정이 없으신가요? 회원가입\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLogin.getInitialProps = async context => {\r\n  const state = context.store.getState();\r\n  if (state.user.metaStates.isLoggedIn) {\r\n    Router.push(\"/\");\r\n  }\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}