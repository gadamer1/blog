{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useCMS, useLocalForm } from \"tinacms\";\n\nconst Post = ({\n  title,\n  fileRelativePath\n}) => {\n  const router = useRouter(); // grab the instance of the CMS to access the registered git API\n\n  let cms = useCMS(); // add a form to the CMS; store form data in `post`\n\n  let [post, form] = useLocalForm({\n    id: fileRelativePath,\n    // needs to be unique\n    label: \"Edit Post\",\n    // starting values for the post object\n    initialValues: {\n      title\n    },\n    // field definition\n    fields: [{\n      name: \"title\",\n      label: \"Title\",\n      component: \"text\"\n    }],\n\n    // save & commit the file when the \"save\" button is pressed\n    onSubmit(data) {\n      return cms.api.git.writeToDisk({\n        fileRelativePath: fileRelativePath,\n        content: _JSON$stringify({\n          title: data.title\n        })\n      }).then(() => {\n        return cms.api.git.commit({\n          files: [fileRelativePath],\n          message: `Commit from Tina: Update ${fileRelativePath}`\n        });\n      });\n    }\n\n  });\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, title));\n};\n\nPost.getInitialProps = ctx => {\n  const {\n    title,\n    category\n  } = ctx.query;\n\n  let content = require(`../../post/${category}/${title}.json`);\n\n  return {\n    fileRelativePath: `/post/${category}/${title}.json`,\n    title: content.title\n  };\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}