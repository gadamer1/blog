{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\post\\\\[category].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\nimport { Link } from \"@material-ui/core\";\n\nvar Post = function Post() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      posts = _useSelector.posts;\n\n  var router = useRouter();\n  var category = router.query.category;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, category), posts && posts.map(function (post) {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: \"/post/\".concat(category, \"/\").concat(post.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, post.title), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, post.nickname)));\n  }));\n};\n\nPost.getInitialProps = function _callee(ctx) {\n  var category;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          category = ctx.query.category;\n          ctx.store.dispatch({\n            type: GET_POSTS_REQUEST,\n            payload: {\n              category: category\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/post/[category].tsx"],"names":["React","useRouter","useSelector","GET_POSTS_REQUEST","Link","Post","state","post","posts","router","category","query","map","title","nickname","getInitialProps","ctx","store","dispatch","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACCH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAxB;AAAA,GAAD,CADZ;AAAA,MACTC,KADS,gBACTA,KADS;;AAEjB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAFiB,MAGTS,QAHS,GAGID,MAAM,CAACE,KAHX,CAGTD,QAHS;AAIjB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,QAAN,CADF,EAEGF,KAAK,IACJA,KAAK,CAACI,GAAN,CAAU,UAAAL,IAAI,EAAI;AAChB,WACE,4BACE,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWG,QAAX,cAAuBH,IAAI,CAACM,KAA5B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,IAAI,CAACM,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,IAAI,CAACO,QAAX,CAFF,CADF,CADF;AAQD,GATD,CAHJ,CADF;AAgBD,CApBD;;AAsBAT,IAAI,CAACU,eAAL,GAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbN,UAAAA,QADa,GACAM,GAAG,CAACL,KADJ,CACbD,QADa;AAErBM,UAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,YAAAA,IAAI,EAAEhB,iBADW;AAEjBiB,YAAAA,OAAO,EAAE;AAAEV,cAAAA,QAAQ,EAARA;AAAF;AAFQ,WAAnB;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeL,IAAf","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\r\nimport { store } from \"../../reducers/types\";\r\nimport { Link } from \"@material-ui/core\";\r\n\r\nconst Post = () => {\r\n  const { posts } = useSelector((state: store) => state.post);\r\n  const router = useRouter();\r\n  const { category } = router.query;\r\n  return (\r\n    <>\r\n      <div>{category}</div>\r\n      {posts &&\r\n        posts.map(post => {\r\n          return (\r\n            <>\r\n              <Link href={`/post/${category}/${post.title}`}>\r\n                <div>{post.title}</div>\r\n                <div>{post.nickname}</div>\r\n              </Link>\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async ctx => {\r\n  const { category } = ctx.query;\r\n  ctx.store.dispatch({\r\n    type: GET_POSTS_REQUEST,\r\n    payload: { category }\r\n  });\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}