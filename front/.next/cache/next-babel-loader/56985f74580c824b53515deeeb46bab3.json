{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\Components\\\\SignUp\\\\SignUpForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Checkbox, FormControlLabel, Link, Button } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport validateEmailInput from \"../../utils/validateEmailInput\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user/actions\";\nimport CircularProgressComponent from \"../../utils/Components/CircularProgressComponent\";\nconst useStyles = makeStyles(theme => createStyles({\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst SignUpForm = () => {\n  const {\n    isSigning\n  } = useSelector(state => state.user.loadingStates);\n  const dispatch = useDispatch();\n  const classes = useStyles({});\n  const {\n    0: nickname,\n    1: setNickname\n  } = useState(\"\");\n  const {\n    0: nicknameError,\n    1: setNicknameError\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: passwordCheckError,\n    1: setPasswordCheckError\n  } = useState(\"\");\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    let validate = true;\n\n    if (!validateEmailInput(email)) {\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\n      validate = false;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailError(\"이메일 주소를 입력해주세요\");\n      validate = false;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordError(\"비밀번호를 입력해주세요\");\n      validate = false;\n    }\n\n    if (passwordCheck.trim() === \"\") {\n      setPasswordCheckError(\"비밀번호 확인란을 입력해주세요\");\n      validate = false;\n    }\n\n    if (password !== passwordCheck) {\n      setPasswordCheckError(\"비밀번호가 같지 않습니다\");\n      validate = false;\n    }\n\n    if (validate) {\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        payload: {\n          email,\n          nickname,\n          password\n        }\n      });\n    }\n  };\n\n  const handleNickname = event => {\n    if (nicknameError) {\n      setNicknameError(\"\");\n    }\n\n    setNickname(event.target.value);\n  };\n\n  const handleEmail = event => {\n    if (emailError) {\n      setEmailError(\"\");\n    }\n\n    setEmail(event.target.value);\n  };\n\n  const handdlePassword = event => {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n\n    if (event.target.value === passwordCheck) {\n      setPasswordCheckError(\"\");\n    }\n\n    setPassword(event.target.value);\n  };\n\n  const handdlePasswordCheck = event => {\n    if (passwordCheckError) {\n      setPasswordCheckError(\"\");\n    }\n\n    setPasswordCheck(event.target.value);\n  };\n\n  return __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !!nicknameError,\n    helperText: nicknameError,\n    autoComplete: \"nickname\",\n    name: \"nickname\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"nickname\",\n    label: \"\\uB2C9\\uB124\\uC784\",\n    autoFocus: true,\n    value: nickname,\n    onChange: handleNickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !!emailError,\n    helperText: emailError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n    name: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: handleEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !!passwordError,\n    helperText: passwordError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: handdlePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !!passwordCheckError,\n    helperText: passwordCheckError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: passwordCheck,\n    onChange: handdlePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }),\n    label: \"\\uC54C\\uB78C\\uC744 \\uBC1B\\uACE0 \\uC2F6\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uBA54\\uC77C\\uC744 \\uD1B5\\uD574 \\uC54C\\uB78C\\uC744 \\uBC1B\\uC744\\uB798\\uC694! \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: isSigning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, isSigning ? __jsx(CircularProgressComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"\\uACC4\\uC815\\uC774 \\uC774\\uBBF8 \\uC788\\uB098\\uC694? \\uB85C\\uADF8\\uC778\"))));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["D:/webdev/web_blog/front/Components/SignUp/SignUpForm.tsx"],"names":["React","useState","Grid","TextField","Checkbox","FormControlLabel","Link","Button","makeStyles","createStyles","useDispatch","useSelector","validateEmailInput","SIGN_UP_REQUEST","CircularProgressComponent","useStyles","theme","form","width","marginTop","spacing","submit","margin","SignUpForm","isSigning","state","user","loadingStates","dispatch","classes","nickname","setNickname","nicknameError","setNicknameError","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","passwordCheck","setPasswordCheck","passwordCheckError","setPasswordCheckError","handleSubmitForm","event","preventDefault","validate","trim","type","payload","handleNickname","target","value","handleEmail","handdlePassword","handdlePasswordCheck"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Link,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { store } from \"../../reducers/types\";\r\nimport validateEmailInput from \"../../utils/validateEmailInput\";\r\nimport { SIGN_UP_REQUEST } from \"../../reducers/user/actions\";\r\nimport CircularProgressComponent from \"../../utils/Components/CircularProgressComponent\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  })\r\n);\r\n\r\nconst SignUpForm: FunctionComponent = () => {\r\n  const { isSigning } = useSelector((state: store) => state.user.loadingStates);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({});\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [nicknameError, setNicknameError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordCheckError, setPasswordCheckError] = useState(\"\");\r\n\r\n  const handleSubmitForm = event => {\r\n    event.preventDefault();\r\n    let validate = true;\r\n    if (!validateEmailInput(email)) {\r\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\r\n      validate = false;\r\n    }\r\n    if (email.trim() === \"\") {\r\n      setEmailError(\"이메일 주소를 입력해주세요\");\r\n      validate = false;\r\n    }\r\n    if (password.trim() === \"\") {\r\n      setPasswordError(\"비밀번호를 입력해주세요\");\r\n      validate = false;\r\n    }\r\n    if (passwordCheck.trim() === \"\") {\r\n      setPasswordCheckError(\"비밀번호 확인란을 입력해주세요\");\r\n      validate = false;\r\n    }\r\n    if (password !== passwordCheck) {\r\n      setPasswordCheckError(\"비밀번호가 같지 않습니다\");\r\n      validate = false;\r\n    }\r\n    if (validate) {\r\n      dispatch({\r\n        type: SIGN_UP_REQUEST,\r\n        payload: {\r\n          email,\r\n          nickname,\r\n          password\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNickname = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (nicknameError) {\r\n      setNicknameError(\"\");\r\n    }\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  const handleEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (emailError) {\r\n      setEmailError(\"\");\r\n    }\r\n    setEmail(event.target.value);\r\n  };\r\n  const handdlePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (passwordError) {\r\n      setPasswordError(\"\");\r\n    }\r\n    if (event.target.value === passwordCheck) {\r\n      setPasswordCheckError(\"\");\r\n    }\r\n    setPassword(event.target.value);\r\n  };\r\n  const handdlePasswordCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (passwordCheckError) {\r\n      setPasswordCheckError(\"\");\r\n    }\r\n    setPasswordCheck(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} noValidate onSubmit={handleSubmitForm}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            error={!!nicknameError}\r\n            helperText={nicknameError}\r\n            autoComplete=\"nickname\"\r\n            name=\"nickname\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"nickname\"\r\n            label=\"닉네임\"\r\n            autoFocus\r\n            value={nickname}\r\n            onChange={handleNickname}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            error={!!emailError}\r\n            helperText={emailError}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일 주소\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={handleEmail}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            error={!!passwordError}\r\n            helperText={passwordError}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"비밀번호\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handdlePassword}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            error={!!passwordCheckError}\r\n            helperText={passwordCheckError}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"비밀번호 확인\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={passwordCheck}\r\n            onChange={handdlePasswordCheck}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n            label=\"알람을 받고 싶습니다. 이메일을 통해 알람을 받을래요! \"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        disabled={isSigning}\r\n      >\r\n        {isSigning ? (\r\n          <CircularProgressComponent />\r\n        ) : (\r\n          <Typography>회원가입</Typography>\r\n        )}\r\n      </Button>\r\n      <Grid container justify=\"flex-end\">\r\n        <Grid item>\r\n          <Link href=\"#\" variant=\"body2\">\r\n            계정이 이미 있나요? 로그인\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}