{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\post\\\\[category]\\\\[title].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FETCH_POST_REQUEST } from \"../../../reducers/post/actions\";\n\nvar Post = function Post() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentPost = _useSelector.currentPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPostLoading = _useSelector2.isPostLoading;\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4!\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, currentPost && currentPost.title));\n  }\n};\n\nPost.getInitialProps = function (ctx) {\n  var _ctx$query = ctx.query,\n      title = _ctx$query.title,\n      category = _ctx$query.category;\n  ctx.store.dispatch({\n    type: FETCH_POST_REQUEST,\n    payload: {\n      title: title,\n      category: category\n    }\n  });\n  console.log(ctx.query);\n  return {};\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/post/[category]/[title].tsx"],"names":["React","useSelector","FETCH_POST_REQUEST","Post","state","post","currentPost","loadingStates","isPostLoading","title","getInitialProps","ctx","query","category","store","dispatch","type","payload","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAGA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAEEC,kBAFF,QAGO,gCAHP;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACOF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAxB;AAAA,GAAD,CADlB;AAAA,MACTC,WADS,gBACTA,WADS;;AAAA,sBAESL,WAAW,CACnC,UAACG,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAN,CAAWE,aAA7B;AAAA,GADmC,CAFpB;AAAA,MAETC,aAFS,iBAETA,aAFS;;AAKjB,MAAIA,aAAJ,EAAmB;AACjB,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CADF;AAKD,GAND,MAMO;AACL,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,WAAW,IAAIA,WAAW,CAACG,KAAhC,CADF,CADF;AAKD;AACF,CAlBD;;AAoBAN,IAAI,CAACO,eAAL,GAAuB,UAAAC,GAAG,EAAI;AAAA,mBACAA,GAAG,CAACC,KADJ;AAAA,MACpBH,KADoB,cACpBA,KADoB;AAAA,MACbI,QADa,cACbA,QADa;AAG5BF,EAAAA,GAAG,CAACG,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,IAAAA,IAAI,EAAEd,kBADW;AAEjBe,IAAAA,OAAO,EAAE;AACPR,MAAAA,KAAK,EAALA,KADO;AAEPI,MAAAA,QAAQ,EAARA;AAFO;AAFQ,GAAnB;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACC,KAAhB;AACA,SAAO,EAAP;AACD,CAbD;;AAeA,eAAeT,IAAf","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_POST_REQUEST,\r\n  FETCH_POST_REQUEST\r\n} from \"../../../reducers/post/actions\";\r\nimport { store } from \"../../../reducers/types\";\r\n\r\nconst Post = () => {\r\n  const { currentPost } = useSelector((state: store) => state.post);\r\n  const { isPostLoading } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중 입니다!</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h1>{currentPost && currentPost.title}</h1>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nPost.getInitialProps = ctx => {\r\n  const { title, category } = ctx.query;\r\n\r\n  ctx.store.dispatch({\r\n    type: FETCH_POST_REQUEST,\r\n    payload: {\r\n      title,\r\n      category\r\n    }\r\n  });\r\n\r\n  console.log(ctx.query);\r\n  return {};\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}