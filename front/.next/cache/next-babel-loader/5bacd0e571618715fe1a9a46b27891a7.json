{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\post\\\\[category].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\nimport { Link, Grid, Typography, Divider, Paper, Container } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    width: 500,\n    textDecoration: \"none\"\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n\nconst Post = () => {\n  const {\n    posts\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    category\n  } = router.query;\n  const classes = useStyles({});\n\n  const CategoryTitle = ({\n    category\n  }) => {\n    switch (category) {\n      case \"dev\":\n        {\n          return __jsx(Typography, {\n            variant: \"h2\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"\\uAC1C\\uBC1C\");\n        }\n\n      case \"hacking\":\n        {\n          return __jsx(Typography, {\n            variant: \"h2\",\n            color: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"\\uD574\\uD0B9\");\n        }\n\n      case \"finance\":\n        {\n          return __jsx(Typography, {\n            variant: \"h2\",\n            color: \"initial\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"\\uC7AC\\uD14C\\uD06C\");\n        }\n\n      case \"business\":\n        {\n          return __jsx(Typography, {\n            variant: \"h2\",\n            color: \"secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"\\uBE44\\uC988\\uB2C8\\uC2A4\");\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(CategoryTitle, {\n    category: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), posts && posts.map(post => {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: `/post/${category}/${post.title}`,\n      key: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(Grid, {\n      key: post._id,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, post.title), __jsx(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, post.nickname), __jsx(Typography, {\n      variant: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, post.Date)))));\n  }))));\n};\n\nPost.getInitialProps = async ctx => {\n  const {\n    category\n  } = ctx.query;\n  ctx.store.dispatch({\n    type: GET_POSTS_REQUEST,\n    payload: {\n      category\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/post/[category].tsx"],"names":["React","useRouter","useSelector","GET_POSTS_REQUEST","Link","Grid","Typography","Divider","Paper","Container","makeStyles","createStyles","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","width","textDecoration","image","height","img","display","maxWidth","maxHeight","Post","posts","state","post","router","category","query","classes","CategoryTitle","map","title","_id","nickname","Date","getInitialProps","ctx","store","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GET_POSTS_REQUEST } from \"../../reducers/post/actions\";\r\nimport { store } from \"../../reducers/types\";\r\nimport {\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  Paper,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: \"auto\",\r\n\r\n      width: 500,\r\n      textDecoration: \"none\"\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128\r\n    },\r\n    img: {\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"100%\"\r\n    }\r\n  })\r\n);\r\n\r\nconst Post = () => {\r\n  const { posts } = useSelector((state: store) => state.post);\r\n  const router = useRouter();\r\n  const { category } = router.query;\r\n\r\n  const classes = useStyles({});\r\n\r\n  const CategoryTitle = ({ category }) => {\r\n    switch (category) {\r\n      case \"dev\": {\r\n        return (\r\n          <Typography variant=\"h2\" color=\"primary\">\r\n            개발\r\n          </Typography>\r\n        );\r\n      }\r\n      case \"hacking\": {\r\n        return (\r\n          <Typography variant=\"h2\" color=\"error\">\r\n            해킹\r\n          </Typography>\r\n        );\r\n      }\r\n      case \"finance\": {\r\n        return (\r\n          <Typography variant=\"h2\" color=\"initial\">\r\n            재테크\r\n          </Typography>\r\n        );\r\n      }\r\n      case \"business\": {\r\n        return (\r\n          <Typography variant=\"h2\" color=\"secondary\">\r\n            비즈니스\r\n          </Typography>\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container justify=\"center\" spacing={3} className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <CategoryTitle category={category} />\r\n          </Grid>\r\n          <Divider />\r\n          {posts &&\r\n            posts.map(post => {\r\n              return (\r\n                <>\r\n                  <Link href={`/post/${category}/${post.title}`} key={post._id}>\r\n                    <Grid key={post._id} item xs={6}>\r\n                      <Paper className={classes.paper}>\r\n                        <Typography variant=\"h5\">{post.title}</Typography>\r\n                        <Typography variant=\"h6\">{post.nickname}</Typography>\r\n                        <Typography variant=\"inherit\">{post.Date}</Typography>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Link>\r\n                </>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async ctx => {\r\n  const { category } = ctx.query;\r\n  ctx.store.dispatch({\r\n    type: GET_POSTS_REQUEST,\r\n    payload: { category }\r\n  });\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}