{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\Components\\\\admin\\\\MakePosts\\\\MakePostsForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, Typography, TextField, Button, Select, MenuItem, FormHelperText, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\nimport { useStyles } from \"./MakePostsForm.style\";\nimport ReactMarkdown from \"react-markdown\";\nimport { MAKE_POST_REQUEST } from \"../../../reducers/post/actions\";\n\nvar MakePostsForm = function MakePostsForm() {\n  var classes = useStyles({});\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      text = _useState3[0],\n      setText = _useState3[1];\n\n  var _useState4 = useState(false),\n      hidden = _useState4[0],\n      setHidden = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPosting = _useSelector.isPosting,\n      isPostingSuccess = _useSelector.isPostingSuccess;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user.me;\n  }),\n      _id = _useSelector2._id,\n      nickname = _useSelector2.nickname; // window storage\n\n\n  useEffect(function () {\n    var text = window.localStorage.getItem(\"text\");\n    var title = window.localStorage.getItem(\"title\");\n    var category = window.localStorage.getItem(\"category\");\n    var hidden = window.localStorage.getItem(\"hidden\");\n\n    if (text) {\n      setText(text);\n    } else {\n      setText(\"\");\n    }\n\n    if (title) {\n      setTitle(title);\n    } else {\n      setTitle(\"\");\n    }\n\n    if (category) {\n      setCategory(category);\n    } else {\n      setCategory(\"dev\");\n    }\n  }, []);\n\n  var _onChangeText = function _onChangeText(e) {\n    setText(e.target.value);\n  };\n\n  var _onCategoryChange = function _onCategoryChange(e) {\n    setCategory(e.target.value);\n  };\n\n  var _onChangeTitle = function _onChangeTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var _onChangeHidden = function _onChangeHidden(e) {\n    setHidden(e.target.checked);\n  };\n\n  var _onSubmitPost = function _onSubmitPost(e) {\n    e.preventDefault();\n\n    if (text.trim() !== \"\" && title.trim() !== \"\") {\n      dispatch({\n        type: MAKE_POST_REQUEST,\n        payload: {\n          authorId: _id,\n          category: category,\n          // @ts-ignore\n          body: text,\n          title: title,\n          hidden: hidden,\n          nickname: nickname\n        }\n      });\n    }\n  };\n\n  return __jsx(\"form\", {\n    className: classes.root,\n    onSubmit: _onSubmitPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), __jsx(FormControl, {\n    margin: \"normal\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\uC81C\\uBAA9\",\n    variant: \"outlined\",\n    value: title,\n    onChange: _onChangeTitle,\n    className: classes.title,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Select, {\n    value: category,\n    onChange: _onCategoryChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: \"dev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\uAC1C\\uBC1C\"), __jsx(MenuItem, {\n    value: \"hacking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\uD574\\uD0B9\"), __jsx(MenuItem, {\n    value: \"finance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\uC7AC\\uD14C\\uD06C\"), __jsx(MenuItem, {\n    value: \"business\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\uBE44\\uC988\\uB2C8\\uC2A4\")), __jsx(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\")), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    value: text,\n    onChange: _onChangeText,\n    className: classes.markdownTextArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: isPosting,\n    className: classes.postButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, isPosting ? __jsx(CircularProgressComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\")), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: hidden,\n      onChange: _onChangeHidden,\n      value: hidden,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }),\n    label: \"\\uC784\\uC2DC\\uC800\\uC7A5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }));\n};\n\nexport default MakePostsForm;","map":{"version":3,"sources":["D:/webdev/blog/front/Components/admin/MakePosts/MakePostsForm.tsx"],"names":["React","useState","useEffect","FormControl","Typography","TextField","Button","Select","MenuItem","FormHelperText","Grid","useSelector","useDispatch","CircularProgressComponent","useStyles","ReactMarkdown","MAKE_POST_REQUEST","MakePostsForm","classes","title","setTitle","category","setCategory","text","setText","hidden","setHidden","dispatch","state","post","loadingStates","isPosting","isPostingSuccess","user","me","_id","nickname","window","localStorage","getItem","_onChangeText","e","target","value","_onCategoryChange","_onChangeTitle","_onChangeHidden","checked","_onSubmitPost","preventDefault","trim","type","payload","authorId","body","root","formControl","width","markdownTextArea","postButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NextPage } from \"next\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormLabel,\r\n  FormHelperText,\r\n  TextareaAutosize,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\r\nimport { useStyles } from \"./MakePostsForm.style\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { MAKE_POST_REQUEST } from \"../../../reducers/post/actions\";\r\n\r\nconst MakePostsForm: NextPage = () => {\r\n  const classes = useStyles({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [hidden, setHidden] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isPosting, isPostingSuccess } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const { _id, nickname } = useSelector((state: store) => state.user.me);\r\n\r\n  // window storage\r\n\r\n  useEffect(() => {\r\n    const text = window.localStorage.getItem(\"text\");\r\n    const title = window.localStorage.getItem(\"title\");\r\n    const category = window.localStorage.getItem(\"category\");\r\n    const hidden = window.localStorage.getItem(\"hidden\");\r\n\r\n    if (text) {\r\n      setText(text);\r\n    } else {\r\n      setText(\"\");\r\n    }\r\n    if (title) {\r\n      setTitle(title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n    if (category) {\r\n      setCategory(category);\r\n    } else {\r\n      setCategory(\"dev\");\r\n    }\r\n  }, []);\r\n\r\n  const _onChangeText = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const _onCategoryChange = (e: React.ChangeEvent<{ value: string }>) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const _onChangeTitle = (e: React.ChangeEvent<{ value: string }>) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const _onChangeHidden = e => {\r\n    setHidden(e.target.checked);\r\n  };\r\n\r\n  const _onSubmitPost = e => {\r\n    e.preventDefault();\r\n    if (text.trim() !== \"\" && title.trim() !== \"\") {\r\n      dispatch({\r\n        type: MAKE_POST_REQUEST,\r\n        payload: {\r\n          authorId: _id,\r\n          category,\r\n          // @ts-ignore\r\n          body: text,\r\n          title,\r\n          hidden,\r\n          nickname\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={_onSubmitPost}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        게시글 작성하기\r\n      </Typography>\r\n      <FormControl margin=\"normal\" className={classes.formControl}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"제목\"\r\n          variant=\"outlined\"\r\n          value={title}\r\n          onChange={_onChangeTitle}\r\n          className={classes.title}\r\n          fullWidth\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select value={category} onChange={_onCategoryChange}>\r\n          <MenuItem value=\"dev\">개발</MenuItem>\r\n          <MenuItem value=\"hacking\">해킹</MenuItem>\r\n          <MenuItem value=\"finance\">재테크</MenuItem>\r\n          <MenuItem value=\"business\">비즈니스</MenuItem>\r\n        </Select>\r\n        <FormHelperText>카테고리</FormHelperText>\r\n      </FormControl>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} style={{ width: \"100%\" }}>\r\n          <textarea\r\n            value={text}\r\n            onChange={_onChangeText}\r\n            className={classes.markdownTextArea}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <ReactMarkdown source={text} />\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={isPosting}\r\n        className={classes.postButton}\r\n      >\r\n        {isPosting ? (\r\n          <CircularProgressComponent />\r\n        ) : (\r\n          <Typography>포스팅</Typography>\r\n        )}\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={hidden}\r\n            onChange={_onChangeHidden}\r\n            value={hidden}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"임시저장\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MakePostsForm;\r\n"]},"metadata":{},"sourceType":"module"}