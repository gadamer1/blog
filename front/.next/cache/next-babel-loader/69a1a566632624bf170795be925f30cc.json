{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\Components\\\\admin\\\\MakePosts\\\\MakePostsForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, Typography, TextField, Button, Select, MenuItem, FormHelperText, Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\nimport { useStyles } from \"./MakePostsForm.style\";\nimport ReactMarkdown from \"react-markdown\";\nimport { MAKE_POST_REQUEST, MAKE_POST_FAILURE } from \"../../../reducers/post/actions\";\nimport CodeBlock from \"./CodeBlock\";\nconst isBoolean = \"true\";\n\nconst MakePostsForm = () => {\n  const classes = useStyles({});\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: hidden,\n    1: setHidden\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    isPosting,\n    isPostingSuccess\n  } = useSelector(state => state.post.loadingStates);\n  const {\n    _id,\n    nickname\n  } = useSelector(state => state.user.me); // redirect when posting post succesfully\n\n  useEffect(() => {\n    if (isPostingSuccess) {\n      dispatch({\n        type: MAKE_POST_FAILURE\n      });\n      window.localStorage.removeItem(\"category\");\n      window.localStorage.removeItem(\"title\");\n      window.localStorage.removeItem(\"content\");\n      Router.replace(`/post/${category}/${title}`);\n    }\n  }, [isPostingSuccess]); // window storage\n\n  useEffect(() => {\n    const text = window.localStorage.getItem(\"text\");\n    const title = window.localStorage.getItem(\"title\");\n    const category = window.localStorage.getItem(\"category\");\n    const hidden = window.localStorage.getItem(\"hidden\");\n\n    if (text) {\n      setText(text);\n    } else {\n      setText(\"\");\n    }\n\n    if (title) {\n      setTitle(title);\n    } else {\n      setTitle(\"\");\n    }\n\n    if (category) {\n      setCategory(category);\n    } else {\n      setCategory(\"dev\");\n    }\n\n    if (hidden) {\n      setHidden(isBoolean === hidden);\n    } else {\n      setHidden(false);\n    }\n  }, []);\n\n  const saveText = text => {\n    window.localStorage.setItem(\"text\", text);\n  };\n\n  const saveTitle = title => {\n    window.localStorage.setItem(\"title\", title);\n  };\n\n  const saveCategory = category => {\n    window.localStorage.setItem(\"category\", category);\n  };\n\n  const saveHidden = hidden => {\n    window.localStorage.setItem(\"hidden\", hidden);\n  };\n\n  const _onChangeText = e => {\n    setText(e.target.value);\n    saveText(e.target.value);\n  };\n\n  const _onCategoryChange = e => {\n    setCategory(e.target.value);\n    saveCategory(e.target.value);\n  };\n\n  const _onChangeTitle = e => {\n    setTitle(e.target.value);\n    saveTitle(e.target.value);\n  };\n\n  const _onChangeHidden = e => {\n    setHidden(e.target.checked);\n    saveHidden(e.target.checked);\n  };\n\n  const _onSubmitPost = e => {\n    e.preventDefault();\n\n    if (text.trim() !== \"\" && title.trim() !== \"\") {\n      dispatch({\n        type: MAKE_POST_REQUEST,\n        payload: {\n          authorId: _id,\n          category,\n          // @ts-ignore\n          body: text,\n          title,\n          hidden,\n          nickname\n        }\n      });\n    }\n  };\n\n  return __jsx(\"form\", {\n    className: classes.root,\n    onSubmit: _onSubmitPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), __jsx(FormControl, {\n    margin: \"normal\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\uC81C\\uBAA9\",\n    variant: \"outlined\",\n    value: title,\n    onChange: _onChangeTitle,\n    className: classes.title,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(Select, {\n    value: category,\n    onChange: _onCategoryChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: \"dev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"\\uAC1C\\uBC1C\"), __jsx(MenuItem, {\n    value: \"hacking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\uD574\\uD0B9\"), __jsx(MenuItem, {\n    value: \"finance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"\\uC7AC\\uD14C\\uD06C\"), __jsx(MenuItem, {\n    value: \"business\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uBE44\\uC988\\uB2C8\\uC2A4\")), __jsx(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\")), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    value: text,\n    onChange: _onChangeText,\n    className: classes.markdownTextArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: text,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }))), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: isPosting,\n    className: classes.postButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, isPosting ? __jsx(CircularProgressComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\")), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: hidden,\n      onChange: _onChangeHidden,\n      value: hidden,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }),\n    label: \"\\uC784\\uC2DC\\uC800\\uC7A5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }));\n};\n\nexport default MakePostsForm;","map":{"version":3,"sources":["D:/webdev/blog/front/Components/admin/MakePosts/MakePostsForm.tsx"],"names":["React","useState","useEffect","FormControl","Typography","TextField","Button","Select","MenuItem","FormHelperText","Grid","FormControlLabel","Checkbox","useSelector","useDispatch","Router","CircularProgressComponent","useStyles","ReactMarkdown","MAKE_POST_REQUEST","MAKE_POST_FAILURE","CodeBlock","isBoolean","MakePostsForm","classes","title","setTitle","category","setCategory","text","setText","hidden","setHidden","dispatch","isPosting","isPostingSuccess","state","post","loadingStates","_id","nickname","user","me","type","window","localStorage","removeItem","replace","getItem","saveText","setItem","saveTitle","saveCategory","saveHidden","_onChangeText","e","target","value","_onCategoryChange","_onChangeTitle","_onChangeHidden","checked","_onSubmitPost","preventDefault","trim","payload","authorId","body","root","formControl","width","markdownTextArea","code","postButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NextPage } from \"next\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormLabel,\r\n  FormHelperText,\r\n  TextareaAutosize,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\r\nimport { useStyles } from \"./MakePostsForm.style\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {\r\n  MAKE_POST_REQUEST,\r\n  MAKE_POST_FAILURE\r\n} from \"../../../reducers/post/actions\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nconst isBoolean = \"true\";\r\n\r\nconst MakePostsForm: NextPage = () => {\r\n  const classes = useStyles({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [hidden, setHidden] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isPosting, isPostingSuccess } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const { _id, nickname } = useSelector((state: store) => state.user.me);\r\n\r\n  // redirect when posting post succesfully\r\n  useEffect(() => {\r\n    if (isPostingSuccess) {\r\n      dispatch({\r\n        type: MAKE_POST_FAILURE\r\n      });\r\n      window.localStorage.removeItem(\"category\");\r\n      window.localStorage.removeItem(\"title\");\r\n      window.localStorage.removeItem(\"content\");\r\n\r\n      Router.replace(`/post/${category}/${title}`);\r\n    }\r\n  }, [isPostingSuccess]);\r\n\r\n  // window storage\r\n\r\n  useEffect(() => {\r\n    const text = window.localStorage.getItem(\"text\");\r\n    const title = window.localStorage.getItem(\"title\");\r\n    const category = window.localStorage.getItem(\"category\");\r\n    const hidden = window.localStorage.getItem(\"hidden\");\r\n\r\n    if (text) {\r\n      setText(text);\r\n    } else {\r\n      setText(\"\");\r\n    }\r\n    if (title) {\r\n      setTitle(title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n    if (category) {\r\n      setCategory(category);\r\n    } else {\r\n      setCategory(\"dev\");\r\n    }\r\n    if (hidden) {\r\n      setHidden(isBoolean === hidden);\r\n    } else {\r\n      setHidden(false);\r\n    }\r\n  }, []);\r\n\r\n  const saveText = text => {\r\n    window.localStorage.setItem(\"text\", text);\r\n  };\r\n\r\n  const saveTitle = title => {\r\n    window.localStorage.setItem(\"title\", title);\r\n  };\r\n  const saveCategory = category => {\r\n    window.localStorage.setItem(\"category\", category);\r\n  };\r\n\r\n  const saveHidden = hidden => {\r\n    window.localStorage.setItem(\"hidden\", hidden);\r\n  };\r\n\r\n  const _onChangeText = e => {\r\n    setText(e.target.value);\r\n    saveText(e.target.value);\r\n  };\r\n\r\n  const _onCategoryChange = (e: React.ChangeEvent<{ value: string }>) => {\r\n    setCategory(e.target.value);\r\n    saveCategory(e.target.value);\r\n  };\r\n\r\n  const _onChangeTitle = (e: React.ChangeEvent<{ value: string }>) => {\r\n    setTitle(e.target.value);\r\n    saveTitle(e.target.value);\r\n  };\r\n\r\n  const _onChangeHidden = e => {\r\n    setHidden(e.target.checked);\r\n    saveHidden(e.target.checked);\r\n  };\r\n\r\n  const _onSubmitPost = e => {\r\n    e.preventDefault();\r\n    if (text.trim() !== \"\" && title.trim() !== \"\") {\r\n      dispatch({\r\n        type: MAKE_POST_REQUEST,\r\n        payload: {\r\n          authorId: _id,\r\n          category,\r\n          // @ts-ignore\r\n          body: text,\r\n          title,\r\n          hidden,\r\n          nickname\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={_onSubmitPost}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        게시글 작성하기\r\n      </Typography>\r\n      <FormControl margin=\"normal\" className={classes.formControl}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"제목\"\r\n          variant=\"outlined\"\r\n          value={title}\r\n          onChange={_onChangeTitle}\r\n          className={classes.title}\r\n          fullWidth\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select value={category} onChange={_onCategoryChange}>\r\n          <MenuItem value=\"dev\">개발</MenuItem>\r\n          <MenuItem value=\"hacking\">해킹</MenuItem>\r\n          <MenuItem value=\"finance\">재테크</MenuItem>\r\n          <MenuItem value=\"business\">비즈니스</MenuItem>\r\n        </Select>\r\n        <FormHelperText>카테고리</FormHelperText>\r\n      </FormControl>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} style={{ width: \"100%\" }}>\r\n          <textarea\r\n            value={text}\r\n            onChange={_onChangeText}\r\n            className={classes.markdownTextArea}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <ReactMarkdown source={text} renderers={{ code: CodeBlock }} />\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={isPosting}\r\n        className={classes.postButton}\r\n      >\r\n        {isPosting ? (\r\n          <CircularProgressComponent />\r\n        ) : (\r\n          <Typography>포스팅</Typography>\r\n        )}\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={hidden}\r\n            onChange={_onChangeHidden}\r\n            value={hidden}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"임시저장\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MakePostsForm;\r\n"]},"metadata":{},"sourceType":"module"}