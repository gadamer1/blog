{"ast":null,"code":"import { all, fork, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOGIN_REQUEST } from \"../reducers/user/actions\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/user\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const User = yield call(loginAPI, action.payload);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["D:/webdev/web_blog/front/sagas/user.ts"],"names":["all","fork","takeLatest","call","axios","LOGIN_REQUEST","loginAPI","data","post","withCredentials","login","action","User","payload","e","console","error","watchLogin","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOH,KAAK,CAACI,IAAN,CAAW,OAAX,EAAoBD,IAApB,EAA0B;AAC/BE,IAAAA,eAAe,EAAE;AADc,GAA1B,CAAP;AAGD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAA4C;AAC1C,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACG,QAAD,EAAWK,MAAM,CAACE,OAAlB,CAAvB;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,UAAUG,UAAV,GAAuB;AACrB,QAAMf,UAAU,CAACG,aAAD,EAAgBK,KAAhB,CAAhB;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { loginRequestAction } from \"../reducers/user/types\";\r\nimport { LOGIN_REQUEST } from \"../reducers/user/actions\";\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/user\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* login(action: loginRequestAction) {\r\n  try {\r\n    const User = yield call(loginAPI, action.payload);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}