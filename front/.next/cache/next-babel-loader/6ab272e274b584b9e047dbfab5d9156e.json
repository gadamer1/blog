{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogout),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserByNickname),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetUserByNickname),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, GET_USER_BY_NICKNAME_REQUEST, GET_USER_BY_NICKNAME_FAILURE, GET_USER_BY_NICKNAME_SUCCESS } from \"../reducers/user/actions\"; // 회원가입 요청\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data, {\n    withCredentials: true\n  });\n}\n\nfunction signUp(action) {\n  var User;\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(signUpAPI, action.payload);\n\n        case 3:\n          User = _context.sent;\n          _context.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            result: User.data.user\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context.t0.response.status\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // 로그인 요청\n\n\nfunction loginAPI(data) {\n  return axios.post(\"/user/login\", data, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var User;\n  return _regeneratorRuntime.wrap(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loginAPI, action.payload);\n\n        case 3:\n          User = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOGIN_SUCCESS,\n            result: User.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOGIN_FAILURE,\n            error: _context3.t0.response.status\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOGIN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction loadUserAPI() {\n  return axios.get(\"/user/is-login\", {\n    withCredentials: true\n  });\n}\n\nfunction loadUser() {\n  var User;\n  return _regeneratorRuntime.wrap(function loadUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          User = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            result: User.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context5.t0.response\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction logoutAPI() {\n  return axios.get(\"/user/logout\", {\n    withCredentials: true\n  });\n}\n\nfunction logout() {\n  var User;\n  return _regeneratorRuntime.wrap(function logout$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          User = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context7.t0.response\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction getUserByNicknameAPI(data) {\n  var nickname = data.nickname;\n  return axios.get(\"/user/info/\".concat(nickname));\n}\n\nfunction getUserByNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function getUserByNickname$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(getUserByNicknameAPI, action.payload);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: GET_USER_BY_NICKNAME_SUCCESS,\n            result: result.data.result\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: GET_USER_BY_NICKNAME_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchGetUserByNickname() {\n  return _regeneratorRuntime.wrap(function watchGetUserByNickname$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(GET_USER_BY_NICKNAME_REQUEST, getUserByNickname);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchLogin), fork(watchSignUp), fork(watchLoadUser), fork(watchLogout), fork(watchGetUserByNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["D:/webdev/web_blog/front/sagas/user.ts"],"names":["signUp","watchSignUp","login","watchLogin","loadUser","watchLoadUser","logout","watchLogout","getUserByNickname","watchGetUserByNickname","userSaga","all","fork","put","takeLatest","call","axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","GET_USER_BY_NICKNAME_REQUEST","GET_USER_BY_NICKNAME_FAILURE","GET_USER_BY_NICKNAME_SUCCESS","signUpAPI","data","post","withCredentials","action","payload","User","type","result","user","console","error","response","status","loginAPI","loadUserAPI","get","logoutAPI","getUserByNicknameAPI","nickname"],"mappings":"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","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  put,\r\n  takeLatest,\r\n  call,\r\n  actionChannel\r\n} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  loginRequestAction,\r\n  signUpRequsetAction,\r\n  getUserByNicknameRequestAction\r\n} from \"../reducers/user/interfaces\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  GET_USER_BY_NICKNAME_REQUEST,\r\n  GET_USER_BY_NICKNAME_FAILURE,\r\n  GET_USER_BY_NICKNAME_SUCCESS\r\n} from \"../reducers/user/actions\";\r\n\r\n// 회원가입 요청\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* signUp(action: signUpRequsetAction) {\r\n  try {\r\n    const User = yield call(signUpAPI, action.payload);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      result: User.data.user\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e.response.status\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n// 로그인 요청\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/user/login\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* login(action: loginRequestAction) {\r\n  try {\r\n    const User = yield call(loginAPI, action.payload);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      result: User.data\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: e.response.status\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction loadUserAPI() {\r\n  return axios.get(\"/user/is-login\", {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    const User = yield call(loadUserAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      result: User.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e.response\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction logoutAPI() {\r\n  return axios.get(\"/user/logout\", {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    const User = yield call(logoutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e.response\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nfunction getUserByNicknameAPI(data) {\r\n  const { nickname } = data;\r\n  return axios.get(`/user/info/${nickname}`);\r\n}\r\n\r\nfunction* getUserByNickname(action: getUserByNicknameRequestAction) {\r\n  try {\r\n    const result = yield call(getUserByNicknameAPI, action.payload);\r\n    yield put({\r\n      type: GET_USER_BY_NICKNAME_SUCCESS,\r\n      result: result.data.result\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: GET_USER_BY_NICKNAME_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchGetUserByNickname() {\r\n  yield takeLatest(GET_USER_BY_NICKNAME_REQUEST, getUserByNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchSignUp),\r\n    fork(watchLoadUser),\r\n    fork(watchLogout),\r\n    fork(watchGetUserByNickname)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}