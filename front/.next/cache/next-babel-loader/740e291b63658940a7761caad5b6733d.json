{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\Components\\\\admin\\\\MakePosts\\\\MakePostsForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\"; //load editor css\n\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { Button } from \"@material-ui/core\";\n\nfunction uploadImageCallBack(file) {\n  return new _Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID b1e6509aad56ae0\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nconst MakePostsForm = () => {\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(\"\");\n  useEffect(() => {\n    const content = window.localStorage.getItem(\"content\");\n\n    if (content) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(content))));\n    } else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  const saveContent = content => {\n    window.localStorage.setItem(\"content\", _JSON$stringify(convertToRaw(content)));\n  };\n\n  const onChangeEditorState = editorState => {\n    const contentState = editorState.getCurrentContent();\n    console.log(convertToRaw(contentState));\n    saveContent(contentState);\n    setEditorState(editorState);\n  };\n\n  const _onClickPostButton = e => {\n    console.log(e);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Editor //@ts-ignore\n  , {\n    editorState: editorState,\n    editorClassName: \"demo-editor\",\n    onEditorStateChange: onChangeEditorState,\n    localization: {\n      locale: \"ko\"\n    },\n    toolbar: {\n      image: {\n        uploadCallback: uploadImageCallBack,\n        alt: {\n          present: true,\n          mandatory: true\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: _onClickPostButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uC791\\uC131\"));\n};\n\nexport default MakePostsForm;","map":{"version":3,"sources":["D:/webdev/web_blog/front/Components/admin/MakePosts/MakePostsForm.tsx"],"names":["React","useEffect","useState","EditorState","convertToRaw","convertFromRaw","Editor","Button","uploadImageCallBack","file","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","MakePostsForm","editorState","setEditorState","content","window","localStorage","getItem","createWithContent","createEmpty","saveContent","setItem","onChangeEditorState","contentState","getCurrentContent","console","log","_onClickPostButton","e","locale","image","uploadCallback","alt","present","mandatory"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n//load editor css\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID b1e6509aad56ae0\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      resolve(response);\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nconst MakePostsForm = () => {\r\n  const [editorState, setEditorState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const content = window.localStorage.getItem(\"content\");\r\n    if (content) {\r\n      setEditorState(\r\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\r\n      );\r\n    } else {\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n  }, []);\r\n\r\n  const saveContent = content => {\r\n    window.localStorage.setItem(\r\n      \"content\",\r\n      JSON.stringify(convertToRaw(content))\r\n    );\r\n  };\r\n\r\n  const onChangeEditorState: Function = editorState => {\r\n    const contentState = editorState.getCurrentContent();\r\n    console.log(convertToRaw(contentState));\r\n    saveContent(contentState);\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  const _onClickPostButton = e => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        //@ts-ignore\r\n        editorState={editorState}\r\n        editorClassName=\"demo-editor\"\r\n        onEditorStateChange={onChangeEditorState}\r\n        localization={{ locale: \"ko\" }}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: uploadImageCallBack,\r\n            alt: { present: true, mandatory: true }\r\n          }\r\n        }}\r\n      />\r\n      <Button onClick={_onClickPostButton}>작성</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MakePostsForm;\r\n"]},"metadata":{},"sourceType":"module"}