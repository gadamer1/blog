{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\post\\\\[category]\\\\[title].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FETCH_POST_REQUEST } from \"../../../reducers/post/actions\";\nimport Renderer from \"../../../Components/draft/Renderer\";\nimport { Grid, Typography, Chip } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  });\n});\n\nvar Post = function Post() {\n  var classes = useStyles({});\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentPost = _useSelector.currentPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPostLoading = _useSelector2.isPostLoading;\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4!\"));\n  } else {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Typography, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, currentPost.title)), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Chip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, currentPost.Date))), currentPost && __jsx(Renderer, {\n      raw: JSON.parse(currentPost.body),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n};\n\nPost.getInitialProps = function (ctx) {\n  var _ctx$query = ctx.query,\n      title = _ctx$query.title,\n      category = _ctx$query.category;\n  ctx.store.dispatch({\n    type: FETCH_POST_REQUEST,\n    payload: {\n      title: title,\n      category: category\n    }\n  });\n  return {};\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/post/[category]/[title].tsx"],"names":["React","useSelector","FETCH_POST_REQUEST","Renderer","Grid","Typography","Chip","makeStyles","createStyles","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Post","classes","state","post","currentPost","loadingStates","isPostLoading","title","Date","JSON","parse","body","getInitialProps","ctx","query","category","store","dispatch","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAGA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAEEC,kBAFF,QAGO,gCAHP;AAKA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAIEC,IAJF,EAKEC,UALF,EAMEC,IANF,QAOO,mBAPP;AAQA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAC3BF,YAAY,CAAC;AACXG,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAE,GAFN;AAGJC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADK,GAAD,CADe;AAAA,CAAD,CAA5B;;AAUA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,OAAO,GAAGV,SAAS,CAAC,EAAD,CAAzB;;AADiB,qBAEOR,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAxB;AAAA,GAAD,CAFlB;AAAA,MAETC,WAFS,gBAETA,WAFS;;AAAA,sBAGSrB,WAAW,CACnC,UAACmB,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAN,CAAWE,aAA7B;AAAA,GADmC,CAHpB;AAAA,MAGTC,aAHS,iBAGTA,aAHS;;AAMjB,MAAIA,aAAJ,EAAmB;AACjB,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CADF;AAKD,GAND,MAMO;AACL,WACE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BW,WAAW,CAACG,KAAzC,CADF,CADF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCH,WAAW,CAACI,IAA/C,CAFF,CAJF,CADF,EAWGJ,WAAW,IAAI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEK,IAAI,CAACC,KAAL,CAAWN,WAAW,CAACO,IAAvB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXlB,CADF;AAeD;AACF,CA7BD;;AA+BAX,IAAI,CAACY,eAAL,GAAuB,UAAAC,GAAG,EAAI;AAAA,mBACAA,GAAG,CAACC,KADJ;AAAA,MACpBP,KADoB,cACpBA,KADoB;AAAA,MACbQ,QADa,cACbA,QADa;AAG5BF,EAAAA,GAAG,CAACG,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,IAAAA,IAAI,EAAElC,kBADW;AAEjBmC,IAAAA,OAAO,EAAE;AACPZ,MAAAA,KAAK,EAALA,KADO;AAEPQ,MAAAA,QAAQ,EAARA;AAFO;AAFQ,GAAnB;AAOA,SAAO,EAAP;AACD,CAXD;;AAaA,eAAef,IAAf","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_POST_REQUEST,\r\n  FETCH_POST_REQUEST\r\n} from \"../../../reducers/post/actions\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport Renderer from \"../../../Components/draft/Renderer\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  Typography,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n    }\r\n  })\r\n);\r\n\r\nconst Post = () => {\r\n  const classes = useStyles({});\r\n  const { currentPost } = useSelector((state: store) => state.post);\r\n  const { isPostLoading } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중 입니다!</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography color=\"primary\">{currentPost.title}</Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Chip></Chip>\r\n            <Typography color=\"textSecondary\">{currentPost.Date}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {currentPost && <Renderer raw={JSON.parse(currentPost.body)} />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPost.getInitialProps = ctx => {\r\n  const { title, category } = ctx.query;\r\n\r\n  ctx.store.dispatch({\r\n    type: FETCH_POST_REQUEST,\r\n    payload: {\r\n      title,\r\n      category\r\n    }\r\n  });\r\n  return {};\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}