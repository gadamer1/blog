{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport AppLayout from \"../Layouts/AppLayout\";\n\nconst Blog = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\uAC00\\uB2E4\\uBA38\\uC758 \\uBE14\\uB85C\\uADF8\")), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n}; // FOR REDUX DEVTOOLS EXTENSION\n\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : compose);\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  store.subscribe(() => {\n    console.dir(\"상태 변경\");\n    console.dir(store.getState());\n  });\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Blog));","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/_app.tsx"],"names":["React","Head","withRedux","withReduxSaga","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","reducer","rootSaga","AppLayout","Blog","Component","store","pageProps","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","sagaTask","run","subscribe","console","dir","getState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAA6D,OAA7D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AASA,MAAMC,IAAwB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACpE,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,CADF;AAUD,CAXD,C,CAaA;;;AAOA,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAoBC,OAApB,KAAqC;AAC1D,QAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADX,GAEIf,OAAO,CACPD,eAAe,CAAC,GAAGgB,WAAJ,CADR,EAEP,CAACF,OAAO,CAACI,QAAT,IACE,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WADjD,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGInB,OALG,CAHb;AAUA,QAAMS,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUQ,YAAV,EAAwBI,QAAxB,CAAzB;AACAP,EAAAA,KAAK,CAACW,QAAN,GAAiBN,cAAc,CAACO,GAAf,CAAmBhB,QAAnB,CAAjB;AACAI,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,QAAN,EAAZ;AACD,GAHD;AAIA,SAAOhB,KAAP;AACD,CApBD;;AAsBA,eAAeZ,SAAS,CAACc,cAAD,CAAT,CAA0Bb,aAAa,CAACS,IAAD,CAAvC,CAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport { applyMiddleware, compose, createStore, Store } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\nimport AppLayout from \"../Layouts/AppLayout\";\r\nimport { any } from \"prop-types\";\r\n\r\ninterface appProps {\r\n  Component: React.ComponentType;\r\n  store: Store;\r\n  pageProps: any;\r\n}\r\n\r\nconst Blog: React.FC<appProps> = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <title>가다머의 블로그</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <Component {...pageProps} />\r\n      </AppLayout>\r\n    </Provider>\r\n  );\r\n};\r\n\r\n// FOR REDUX DEVTOOLS EXTENSION\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst configureStore = (initialState: any, options: any) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer &&\r\n          typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\r\n          ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n          : compose\r\n      );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  store.subscribe(() => {\r\n    console.dir(\"상태 변경\");\r\n    console.dir(store.getState());\r\n  });\r\n  return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(Blog));\r\n"]},"metadata":{},"sourceType":"module"}