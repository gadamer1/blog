{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Checkbox, FormControlLabel, Link, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport validateEmailInput from \"../../utils/validateEmailInput\";\nimport { SIGN_UP_REQUEST } from \"../../reducers/user/actions\";\nimport CircularProgressComponent from \"../../utils/Components/CircularProgressComponent\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  });\n});\n\nvar SignUpForm = function SignUpForm() {\n  var _useSelector = useSelector(function (state) {\n    return state.user.loadingStates;\n  }),\n      isSigning = _useSelector.isSigning;\n\n  var dispatch = useDispatch();\n  var classes = useStyles({});\n\n  var _useState = useState(\"\"),\n      nickname = _useState[0],\n      setNickname = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      nicknameError = _useState2[0],\n      setNicknameError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      emailError = _useState4[0],\n      setEmailError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      password = _useState5[0],\n      setPassword = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      passwordError = _useState6[0],\n      setPasswordError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      passwordCheck = _useState7[0],\n      setPasswordCheck = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      passwordCheckError = _useState8[0],\n      setPasswordCheckError = _useState8[1];\n\n  var handleSubmitForm = function handleSubmitForm(event) {\n    event.preventDefault();\n    var validate = true;\n\n    if (!validateEmailInput(email)) {\n      setEmailError(\"올바르지 않은 이메일 주소입니다.\");\n      validate = false;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailError(\"이메일 주소를 입력해주세요\");\n      validate = false;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordError(\"비밀번호를 입력해주세요\");\n      validate = false;\n    }\n\n    if (password.length < 8) {\n      setPasswordCheckError(\"비밀번호의 길이는 8자이상으로 입력해주세요\");\n      validate = false;\n    }\n\n    if (passwordCheck.trim() === \"\") {\n      setPasswordCheckError(\"비밀번호 확인란을 입력해주세요\");\n      validate = false;\n    }\n\n    if (password !== passwordCheck) {\n      setPasswordCheckError(\"비밀번호가 같지 않습니다\");\n      validate = false;\n    }\n\n    if (validate) {\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        payload: {\n          email: email,\n          nickname: nickname,\n          password: password\n        }\n      });\n    }\n  };\n\n  var handleNickname = function handleNickname(event) {\n    if (nicknameError) {\n      setNicknameError(\"\");\n    }\n\n    setNickname(event.target.value);\n  };\n\n  var handleEmail = function handleEmail(event) {\n    if (emailError) {\n      setEmailError(\"\");\n    }\n\n    setEmail(event.target.value);\n  };\n\n  var handdlePassword = function handdlePassword(event) {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n\n    if (event.target.value === passwordCheck) {\n      setPasswordCheckError(\"\");\n    }\n\n    setPassword(event.target.value);\n  };\n\n  var handdlePasswordCheck = function handdlePasswordCheck(event) {\n    if (passwordCheckError) {\n      setPasswordCheckError(\"\");\n    }\n\n    setPasswordCheck(event.target.value);\n  };\n\n  return __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmitForm\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    error: !!nicknameError,\n    helperText: nicknameError,\n    autoComplete: \"nickname\",\n    name: \"nickname\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"nickname\",\n    label: \"\\uB2C9\\uB124\\uC784\",\n    autoFocus: true,\n    value: nickname,\n    onChange: handleNickname\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    error: !!emailError,\n    helperText: emailError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n    name: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: handleEmail\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    error: !!passwordError,\n    helperText: passwordError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: handdlePassword\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    error: !!passwordCheckError,\n    helperText: passwordCheckError,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: passwordCheck,\n    onChange: handdlePasswordCheck\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\"\n    }),\n    label: \"\\uC54C\\uB78C\\uC744 \\uBC1B\\uACE0 \\uC2F6\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uBA54\\uC77C\\uC744 \\uD1B5\\uD574 \\uC54C\\uB78C\\uC744 \\uBC1B\\uC744\\uB798\\uC694! \"\n  }))), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: isSigning\n  }, isSigning ? __jsx(CircularProgressComponent, null) : __jsx(Typography, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\"\n  }, \"\\uACC4\\uC815\\uC774 \\uC774\\uBBF8 \\uC788\\uB098\\uC694? \\uB85C\\uADF8\\uC778\"))));\n};\n\nexport default SignUpForm;","map":null,"metadata":{},"sourceType":"module"}