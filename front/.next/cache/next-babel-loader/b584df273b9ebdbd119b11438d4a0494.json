{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\postList.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PostListContainer from \"../Components/PostList/PostListContainer\";\n\nvar PostList = function PostList() {\n  var _useSelector = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPostLoading = _useSelector.isPostLoading;\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"));\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(PostListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default PostList;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/postList.tsx"],"names":["React","useSelector","PostListContainer","PostList","state","post","loadingStates","isPostLoading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,iBAAP,MAA8B,0CAA9B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,qBACKF,WAAW,CACnC,UAACG,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAN,CAAWC,aAA7B;AAAA,GADmC,CADhB;AAAA,MACbC,aADa,gBACbA,aADa;;AAIrB,MAAIA,aAAJ,EAAmB;AACjB,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CADF;AAKD,GAND,MAMO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AACF,CAjBD;;AAmBA,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { store } from \"../reducers/types\";\r\nimport PostListContainer from \"../Components/PostList/PostListContainer\";\r\n\r\nconst PostList = () => {\r\n  const { isPostLoading } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중입니다.</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <PostListContainer />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}