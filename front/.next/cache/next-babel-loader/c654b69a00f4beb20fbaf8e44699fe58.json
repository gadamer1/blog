{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\Components\\\\admin\\\\MakePosts\\\\MakePostsForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport Router from \"next/router\";\nimport { Editor } from \"react-draft-wysiwyg\"; //load editor css\n\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { Button, Typography, Select, MenuItem, TextField, FormControl, FormLabel, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\nimport { MAKE_POST_REQUEST, MAKE_POST_FAILURE } from \"../../../reducers/post/actions\";\n\nfunction uploadImageCallBack(file) {\n  return new _Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID b1e6509aad56ae0\");\n    var data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", function () {\n      var response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", function () {\n      var error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nvar MakePostsForm = function MakePostsForm() {\n  var _useState = useState(\"\"),\n      editorState = _useState[0],\n      setEditorState = _useState[1];\n\n  var _useState2 = useState(\"dev\"),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(false),\n      hidden = _useState4[0],\n      setHidden = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPosting = _useSelector.isPosting,\n      isPostingSuccess = _useSelector.isPostingSuccess;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user.user;\n  }),\n      _id = _useSelector2._id; // 포스팅 완료됐으면 튕구기\n\n\n  useEffect(function () {\n    if (isPostingSuccess) {\n      dispatch({\n        type: MAKE_POST_FAILURE\n      });\n      Router.push(\"/postList\");\n    }\n  }, [isPostingSuccess]);\n  useEffect(function () {\n    var content = window.localStorage.getItem(\"content\");\n\n    if (content) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(content))));\n    } else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, []);\n\n  var saveContent = function saveContent(content) {\n    window.localStorage.setItem(\"content\", _JSON$stringify(convertToRaw(content)));\n  };\n\n  var onChangeEditorState = function onChangeEditorState(editorState) {\n    var contentState = editorState.getCurrentContent();\n    saveContent(contentState);\n    setEditorState(editorState);\n  };\n\n  var _onClickPostButton = function _onClickPostButton(e) {\n    if (title.trim() !== \"\") {\n      dispatch({\n        type: MAKE_POST_REQUEST,\n        payload: {\n          authorId: _id,\n          category: category,\n          body: _JSON$stringify(convertToRaw(editorState)),\n          title: title,\n          hidden: hidden\n        }\n      });\n    }\n  };\n\n  var _onChangeTitle = function _onChangeTitle(text) {\n    setTitle(text);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\uC81C\\uBAA9\",\n    variant: \"outlined\",\n    value: title,\n    onChange: _onChangeTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\"), __jsx(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: \"dev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\uAC1C\\uBC1C\"), __jsx(MenuItem, {\n    value: \"hacking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"\\uD574\\uD0B9\"), __jsx(MenuItem, {\n    value: \"finance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"\\uC7AC\\uD14C\\uD06C\"), __jsx(MenuItem, {\n    value: \"business\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\uBE44\\uC988\\uB2C8\\uC2A4\")), __jsx(Editor //@ts-ignore\n  , {\n    editorState: editorState,\n    editorClassName: \"demo-editor\",\n    onEditorStateChange: onChangeEditorState,\n    localization: {\n      locale: \"ko\"\n    },\n    toolbar: {\n      image: {\n        uploadCallback: uploadImageCallBack,\n        alt: {\n          present: true,\n          mandatory: true\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: _onClickPostButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, isPosting ? __jsx(CircularProgressComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\uD3EC\\uC2A4\\uD305\")), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: hidden,\n      onChange: function onChange(e) {\n        setHidden(e.target.checked);\n      },\n      value: \"\\uC784\\uC2DC\\uC800\\uC7A5\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }),\n    label: \"Primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })));\n};\n\nexport default MakePostsForm;","map":{"version":3,"sources":["D:/webdev/web_blog/front/Components/admin/MakePosts/MakePostsForm.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","EditorState","convertToRaw","convertFromRaw","Router","Editor","Button","Typography","Select","MenuItem","TextField","FormControl","FormLabel","FormControlLabel","Checkbox","CircularProgressComponent","MAKE_POST_REQUEST","MAKE_POST_FAILURE","uploadImageCallBack","file","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","MakePostsForm","editorState","setEditorState","category","setCategory","title","setTitle","hidden","setHidden","dispatch","state","post","loadingStates","isPosting","isPostingSuccess","user","_id","type","push","content","window","localStorage","getItem","createWithContent","createEmpty","saveContent","setItem","onChangeEditorState","contentState","getCurrentContent","_onClickPostButton","e","trim","payload","authorId","body","_onChangeTitle","text","locale","image","uploadCallback","alt","present","mandatory","target","checked"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\r\nimport Router from \"next/router\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n//load editor css\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from \"@material-ui/core\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport CircularProgressComponent from \"../../../utils/Components/CircularProgressComponent\";\r\nimport {\r\n  MAKE_POST_REQUEST,\r\n  MAKE_POST_FAILURE\r\n} from \"../../../reducers/post/actions\";\r\n\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID b1e6509aad56ae0\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      resolve(response);\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nconst MakePostsForm = () => {\r\n  const [editorState, setEditorState] = useState(\"\");\r\n  const [category, setCategory] = useState(\"dev\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [hidden, setHidden] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isPosting, isPostingSuccess } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const { _id } = useSelector((state: store) => state.user.user);\r\n  // 포스팅 완료됐으면 튕구기\r\n  useEffect(() => {\r\n    if (isPostingSuccess) {\r\n      dispatch({\r\n        type: MAKE_POST_FAILURE\r\n      });\r\n      Router.push(\"/postList\");\r\n    }\r\n  }, [isPostingSuccess]);\r\n  useEffect(() => {\r\n    const content = window.localStorage.getItem(\"content\");\r\n    if (content) {\r\n      setEditorState(\r\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\r\n      );\r\n    } else {\r\n      setEditorState(EditorState.createEmpty());\r\n    }\r\n  }, []);\r\n\r\n  const saveContent = content => {\r\n    window.localStorage.setItem(\r\n      \"content\",\r\n      JSON.stringify(convertToRaw(content))\r\n    );\r\n  };\r\n\r\n  const onChangeEditorState: Function = editorState => {\r\n    const contentState = editorState.getCurrentContent();\r\n    saveContent(contentState);\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  const _onClickPostButton = e => {\r\n    if (title.trim() !== \"\") {\r\n      dispatch({\r\n        type: MAKE_POST_REQUEST,\r\n        payload: {\r\n          authorId: _id,\r\n          category,\r\n          body: JSON.stringify(convertToRaw(editorState)),\r\n          title,\r\n          hidden\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const _onChangeTitle = text => {\r\n    setTitle(text);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"제목\"\r\n          variant=\"outlined\"\r\n          value={title}\r\n          onChange={_onChangeTitle}\r\n        />\r\n        <FormLabel component=\"legend\">카테고리</FormLabel>\r\n        <Select>\r\n          <MenuItem value=\"dev\">개발</MenuItem>\r\n          <MenuItem value=\"hacking\">해킹</MenuItem>\r\n          <MenuItem value=\"finance\">재테크</MenuItem>\r\n          <MenuItem value=\"business\">비즈니스</MenuItem>\r\n        </Select>\r\n\r\n        <Editor\r\n          //@ts-ignore\r\n          editorState={editorState}\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={onChangeEditorState}\r\n          localization={{ locale: \"ko\" }}\r\n          toolbar={{\r\n            image: {\r\n              uploadCallback: uploadImageCallBack,\r\n              alt: { present: true, mandatory: true }\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={_onClickPostButton}\r\n        >\r\n          {isPosting ? (\r\n            <CircularProgressComponent />\r\n          ) : (\r\n            <Typography>포스팅</Typography>\r\n          )}\r\n        </Button>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={hidden}\r\n              onChange={e => {\r\n                setHidden(e.target.checked);\r\n              }}\r\n              value=\"임시저장\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Primary\"\r\n        />\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MakePostsForm;\r\n"]},"metadata":{},"sourceType":"module"}