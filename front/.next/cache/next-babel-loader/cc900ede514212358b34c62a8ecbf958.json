{"ast":null,"code":"import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\nimport { MAKE_POST_REQUEST, MAKE_POST_SUCCESS, MAKE_POST_FAILURE } from \"../reducers/post/actions\";\nimport axios from \"axios\";\n\nfunction makePostAPI(data) {\n  return axios.post(\"/post\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* makePost(action) {\n  try {\n    const Post = yield call(makePostAPI, action.payload);\n    put({\n      type: MAKE_POST_SUCCESS,\n      result: {\n        body: Post.data.post,\n        authorNickname: Post.data.authorNickname,\n        date: Post.data.date\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    put({\n      type: MAKE_POST_FAILURE,\n      error: e.response\n    });\n  }\n}\n\nfunction* watchMakePost() {\n  yield takeLatest(MAKE_POST_REQUEST, makePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchMakePost)]);\n}","map":{"version":3,"sources":["D:/webdev/web_blog/front/sagas/post.ts"],"names":["all","fork","takeLatest","put","call","MAKE_POST_REQUEST","MAKE_POST_SUCCESS","MAKE_POST_FAILURE","axios","makePostAPI","data","post","withCredentials","makePost","action","Post","payload","type","result","body","authorNickname","date","e","console","error","response","watchMakePost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,0BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,SAAOF,KAAK,CAACG,IAAN,CAAW,OAAX,EAAoBD,IAApB,EAA0B;AAC/BE,IAAAA,eAAe,EAAE;AADc,GAA1B,CAAP;AAGD;;AAED,UAAUC,QAAV,CAAmBC,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACK,WAAD,EAAcK,MAAM,CAACE,OAArB,CAAvB;AACAb,IAAAA,GAAG,CAAC;AACFc,MAAAA,IAAI,EAAEX,iBADJ;AAEFY,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEJ,IAAI,CAACL,IAAL,CAAUC,IADV;AAENS,QAAAA,cAAc,EAAEL,IAAI,CAACL,IAAL,CAAUU,cAFpB;AAGNC,QAAAA,IAAI,EAAEN,IAAI,CAACL,IAAL,CAAUW;AAHV;AAFN,KAAD,CAAH;AAQD,GAVD,CAUE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAnB,IAAAA,GAAG,CAAC;AACFc,MAAAA,IAAI,EAAEV,iBADJ;AAEFiB,MAAAA,KAAK,EAAEF,CAAC,CAACG;AAFP,KAAD,CAAH;AAID;AACF;;AAED,UAAUC,aAAV,GAA0B;AACxB,QAAMxB,UAAU,CAACG,iBAAD,EAAoBQ,QAApB,CAAhB;AACD;;AAED,eAAe,UAAUc,QAAV,GAAqB;AAClC,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACyB,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\r\nimport {\r\n  MAKE_POST_REQUEST,\r\n  MAKE_POST_SUCCESS,\r\n  MAKE_POST_FAILURE\r\n} from \"../reducers/post/actions\";\r\nimport axios from \"axios\";\r\n\r\nfunction makePostAPI(data) {\r\n  return axios.post(\"/post\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* makePost(action) {\r\n  try {\r\n    const Post = yield call(makePostAPI, action.payload);\r\n    put({\r\n      type: MAKE_POST_SUCCESS,\r\n      result: {\r\n        body: Post.data.post,\r\n        authorNickname: Post.data.authorNickname,\r\n        date: Post.data.date\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    put({\r\n      type: MAKE_POST_FAILURE,\r\n      error: e.response\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchMakePost() {\r\n  yield takeLatest(MAKE_POST_REQUEST, makePost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchMakePost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}