{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\pages\\\\profile\\\\[nickname].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IsLoadingUser from \"../../Components/IsLoadingUser\";\nimport { GET_USER_BY_NICKNAME_REQUEST } from \"../../reducers/user/actions\";\n\nvar Profile = function Profile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user.metaStates;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  if (isLoggedIn) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"hi\");\n  } else {\n    return __jsx(IsLoadingUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n};\n\nProfile.getInitialProps = function _callee(ctx) {\n  var nickname;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          nickname = ctx.query.nickname;\n          ctx.store.dispatch({\n            type: GET_USER_BY_NICKNAME_REQUEST,\n            payload: {\n              nickname: nickname\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/webdev/web_blog/front/pages/profile/[nickname].tsx"],"names":["React","useSelector","IsLoadingUser","GET_USER_BY_NICKNAME_REQUEST","Profile","state","user","metaStates","isLoggedIn","getInitialProps","ctx","nickname","query","store","dispatch","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,4BAAT,QAA6C,6BAA7C;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,qBACGH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAN,CAAWC,UAA7B;AAAA,GAAD,CADd;AAAA,MACZC,UADY,gBACZA,UADY;;AAGpB,MAAIA,UAAJ,EAAgB;AACd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,WAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CARD;;AAUAJ,OAAO,CAACK,eAAR,GAA0B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,QADgB,GACHD,GAAG,CAACE,KADD,CAChBD,QADgB;AAExBD,UAAAA,GAAG,CAACG,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,YAAAA,IAAI,EAAEZ,4BADW;AAEjBa,YAAAA,OAAO,EAAE;AACPL,cAAAA,QAAQ,EAAEA;AADH;AAFQ,WAAnB;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAeP,OAAf","sourcesContent":["import React from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { store } from \"../../reducers/types\";\r\nimport IsLoadingUser from \"../../Components/IsLoadingUser\";\r\nimport { GET_USER_BY_NICKNAME_REQUEST } from \"../../reducers/user/actions\";\r\n\r\nconst Profile = () => {\r\n  const { isLoggedIn } = useSelector((state: store) => state.user.metaStates);\r\n\r\n  if (isLoggedIn) {\r\n    return <div>hi</div>;\r\n  } else {\r\n    return <IsLoadingUser />;\r\n  }\r\n};\r\n\r\nProfile.getInitialProps = async ctx => {\r\n  const { nickname } = ctx.query;\r\n  ctx.store.dispatch({\r\n    type: GET_USER_BY_NICKNAME_REQUEST,\r\n    payload: {\r\n      nickname: nickname\r\n    }\r\n  });\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}