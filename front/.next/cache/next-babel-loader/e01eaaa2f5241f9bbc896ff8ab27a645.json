{"ast":null,"code":"import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, GET_USER_BY_NICKNAME_REQUEST, GET_USER_BY_NICKNAME_FAILURE, GET_USER_BY_NICKNAME_SUCCESS } from \"../reducers/user/actions\"; // 회원가입 요청\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* signUp(action) {\n  try {\n    const User = yield call(signUpAPI, action.payload);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      result: User.data.user\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e.response.status\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} // 로그인 요청\n\n\nfunction loginAPI(data) {\n  return axios.post(\"/user/login\", data, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const User = yield call(loginAPI, action.payload);\n    console.log(User);\n    yield put({\n      type: LOGIN_SUCCESS,\n      result: User.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOGIN_FAILURE,\n      error: e.response.status\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction loadUserAPI() {\n  return axios.get(\"/user/is-login\", {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    const User = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      result: User.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e.response\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction logoutAPI() {\n  return axios.get(\"/user/logout\", {\n    withCredentials: true\n  });\n}\n\nfunction* logout() {\n  try {\n    const User = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e.response\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction getUserByNicknameAPI(data) {\n  const {\n    nickname\n  } = data;\n  return axios.get(`/user/info/${nickname}`);\n}\n\nfunction* getUserByNickname(action) {\n  try {\n    const result = yield call(getUserByNicknameAPI, action.payload);\n    yield put({\n      type: GET_USER_BY_NICKNAME_SUCCESS,\n      result: result.data.result\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_USER_BY_NICKNAME_FAILURE\n    });\n  }\n}\n\nfunction* watchGetUserByNickname() {\n  yield takeLatest(GET_USER_BY_NICKNAME_REQUEST, getUserByNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp), fork(watchLoadUser), fork(watchLogout), fork(watchGetUserByNickname)]);\n}","map":{"version":3,"sources":["D:/webdev/blog/front/sagas/user.ts"],"names":["all","fork","put","takeLatest","call","axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","GET_USER_BY_NICKNAME_REQUEST","GET_USER_BY_NICKNAME_FAILURE","GET_USER_BY_NICKNAME_SUCCESS","signUpAPI","data","post","withCredentials","signUp","action","User","payload","type","result","user","e","console","error","response","status","watchSignUp","loginAPI","login","log","watchLogin","loadUserAPI","get","loadUser","watchLoadUser","logoutAPI","logout","watchLogout","getUserByNicknameAPI","nickname","getUserByNickname","watchGetUserByNickname","userSaga"],"mappings":"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","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  put,\r\n  takeLatest,\r\n  call,\r\n  actionChannel\r\n} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  loginRequestAction,\r\n  signUpRequsetAction,\r\n  getUserByNicknameRequestAction\r\n} from \"../reducers/user/interfaces\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  GET_USER_BY_NICKNAME_REQUEST,\r\n  GET_USER_BY_NICKNAME_FAILURE,\r\n  GET_USER_BY_NICKNAME_SUCCESS\r\n} from \"../reducers/user/actions\";\r\n\r\n// 회원가입 요청\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* signUp(action: signUpRequsetAction) {\r\n  try {\r\n    const User = yield call(signUpAPI, action.payload);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      result: User.data.user\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e.response.status\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n// 로그인 요청\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/user/login\", data, {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* login(action: loginRequestAction) {\r\n  try {\r\n    const User = yield call(loginAPI, action.payload);\r\n    console.log(User);\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      result: User.data\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      error: e.response.status\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOGIN_REQUEST, login);\r\n}\r\n\r\nfunction loadUserAPI() {\r\n  return axios.get(\"/user/is-login\", {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* loadUser() {\r\n  try {\r\n    const User = yield call(loadUserAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      result: User.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e.response\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction logoutAPI() {\r\n  return axios.get(\"/user/logout\", {\r\n    withCredentials: true\r\n  });\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    const User = yield call(logoutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e.response\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nfunction getUserByNicknameAPI(data) {\r\n  const { nickname } = data;\r\n  return axios.get(`/user/info/${nickname}`);\r\n}\r\n\r\nfunction* getUserByNickname(action: getUserByNicknameRequestAction) {\r\n  try {\r\n    const result = yield call(getUserByNicknameAPI, action.payload);\r\n    yield put({\r\n      type: GET_USER_BY_NICKNAME_SUCCESS,\r\n      result: result.data.result\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: GET_USER_BY_NICKNAME_FAILURE\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchGetUserByNickname() {\r\n  yield takeLatest(GET_USER_BY_NICKNAME_REQUEST, getUserByNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchSignUp),\r\n    fork(watchLoadUser),\r\n    fork(watchLogout),\r\n    fork(watchGetUserByNickname)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}