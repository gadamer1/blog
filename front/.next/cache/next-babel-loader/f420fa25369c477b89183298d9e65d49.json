{"ast":null,"code":"import produce from \"immer\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, LOG_OUT, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from \"./actions\";\n\n/*INITIAL STATE */\nconst initialState = {\n  user: null,\n  loadingStates: {\n    isLoging: false,\n    isSigning: false\n  },\n  metaStates: {\n    isLoggedIn: false,\n    loginStautsCode: 0,\n    signUpStatusCode: 0\n  },\n  token: null\n};\nconst mockUser = {\n  nickname: \"gadamer\",\n  emailVerified: false\n};\nexport default ((state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOGIN_REQUEST:\n        {\n          draft.loadingStates.isLoging = true;\n          break;\n        }\n\n      case LOGIN_SUCCESS:\n        {\n          draft.loadingStates.isLoging = false;\n          draft.metaStates.loginStautsCode = 200;\n          draft.metaStates.isLoggedIn = true;\n          draft.user = action.result.user;\n          draft.token = action.result.token;\n          break;\n        }\n\n      case LOGIN_FAILURE:\n        {\n          draft.loadingStates.isLoging = false;\n          draft.metaStates.loginStautsCode = action.errorCode;\n          draft.metaStates.isLoggedIn = false;\n        }\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.loadingStates.isSigning = true;\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.loadingStates.isSigning = false;\n          draft.user = action.result.user;\n          draft.token = action.result.token;\n          draft.metaStates.isLoggedIn = true;\n          break;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.loadingStates.isSigning = false;\n          draft.metaStates.signUpStatusCode = action.errorCode;\n          draft.metaStates.isLoggedIn = false;\n          break;\n        }\n\n      case LOG_OUT:\n        {\n          draft.user = null;\n          draft.token = null;\n          draft.metaStates.isLoggedIn = false;\n        }\n\n      case LOAD_USER_REQUEST:\n        {\n          break;\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          draft.user = action.result.user;\n          draft.metaStates.isLoggedIn = true;\n          break;\n        }\n\n      case LOAD_USER_FAILURE:\n        {\n          draft.metaStates.isLoggedIn = false;\n          draft.user = null;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":{"version":3,"sources":["D:/webdev/web_blog/front/reducers/user/index.ts"],"names":["produce","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","LOG_OUT","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","initialState","user","loadingStates","isLoging","isSigning","metaStates","isLoggedIn","loginStautsCode","signUpStatusCode","token","mockUser","nickname","emailVerified","state","action","draft","type","result","errorCode"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  LOG_OUT,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE\r\n} from \"./actions\";\r\nimport { userActions, userStore } from \"./interfaces\";\r\n\r\n/*INITIAL STATE */\r\nconst initialState: userStore = {\r\n  user: null,\r\n  loadingStates: {\r\n    isLoging: false,\r\n    isSigning: false\r\n  },\r\n  metaStates: {\r\n    isLoggedIn: false,\r\n    loginStautsCode: 0,\r\n    signUpStatusCode: 0\r\n  },\r\n  token: null\r\n};\r\n\r\nconst mockUser = {\r\n  nickname: \"gadamer\",\r\n  emailVerified: false\r\n};\r\n\r\nexport default (state = initialState, action: userActions) => {\r\n  return produce(state, draft => {\r\n    switch (action.type) {\r\n      case LOGIN_REQUEST: {\r\n        draft.loadingStates.isLoging = true;\r\n        break;\r\n      }\r\n      case LOGIN_SUCCESS: {\r\n        draft.loadingStates.isLoging = false;\r\n        draft.metaStates.loginStautsCode = 200;\r\n        draft.metaStates.isLoggedIn = true;\r\n        draft.user = action.result.user;\r\n        draft.token = action.result.token;\r\n        break;\r\n      }\r\n      case LOGIN_FAILURE: {\r\n        draft.loadingStates.isLoging = false;\r\n        draft.metaStates.loginStautsCode = action.errorCode;\r\n        draft.metaStates.isLoggedIn = false;\r\n      }\r\n      case SIGN_UP_REQUEST: {\r\n        draft.loadingStates.isSigning = true;\r\n        break;\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        draft.loadingStates.isSigning = false;\r\n        draft.user = action.result.user;\r\n        draft.token = action.result.token;\r\n        draft.metaStates.isLoggedIn = true;\r\n        break;\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        draft.loadingStates.isSigning = false;\r\n        draft.metaStates.signUpStatusCode = action.errorCode;\r\n        draft.metaStates.isLoggedIn = false;\r\n        break;\r\n      }\r\n      case LOG_OUT: {\r\n        draft.user = null;\r\n        draft.token = null;\r\n        draft.metaStates.isLoggedIn = false;\r\n      }\r\n\r\n      case LOAD_USER_REQUEST: {\r\n        break;\r\n      }\r\n      case LOAD_USER_SUCCESS: {\r\n        draft.user = action.result.user;\r\n        draft.metaStates.isLoggedIn = true;\r\n        break;\r\n      }\r\n      case LOAD_USER_FAILURE: {\r\n        draft.metaStates.isLoggedIn = false;\r\n        draft.user = null;\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}