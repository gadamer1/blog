{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\web_blog\\\\front\\\\utils\\\\Components\\\\CircularProgressComponent.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst CircularProgressComponent = () => {\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  useEffect(() => {\n    function tick() {\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return __jsx(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default CircularProgressComponent;","map":{"version":3,"sources":["D:/webdev/web_blog/front/utils/Components/CircularProgressComponent.tsx"],"names":["React","useState","useEffect","CircularProgress","CircularProgressComponent","progress","setProgress","tick","oldProgress","timer","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,yBAA4C,GAAG,MAAM;AACzD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASK,IAAT,GAAgB;AACdD,MAAAA,WAAW,CAAEE,WAAD,IACVA,WAAW,IAAI,GAAf,GAAqB,CAArB,GAAyBA,WAAW,GAAG,CAD9B,CAAX;AAGD;;AACD,UAAMC,KAAK,GAAGC,WAAW,CAACH,IAAD,EAAO,EAAP,CAAzB;AAEA,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAO,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,aAA1B;AAAwC,IAAA,KAAK,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhBD;;AAkBA,eAAeD,yBAAf","sourcesContent":["import React, { useState, FunctionComponent, useEffect } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst CircularProgressComponent: FunctionComponent = () => {\r\n  const [progress, setProgress] = useState(0);\r\n  useEffect(() => {\r\n    function tick() {\r\n      setProgress((oldProgress: number) =>\r\n        oldProgress >= 100 ? 0 : oldProgress + 1\r\n      );\r\n    }\r\n    const timer = setInterval(tick, 20);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return <CircularProgress variant=\"determinate\" value={progress} />;\r\n};\r\n\r\nexport default CircularProgressComponent;\r\n"]},"metadata":{},"sourceType":"module"}