{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\blog\\\\front\\\\pages\\\\post\\\\[category]\\\\[title].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FETCH_POST_REQUEST } from \"../../../reducers/post/actions\";\nimport Renderer from \"../../../Components/draft/Renderer\";\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\n\nvar Post = function Post() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentPost = _useSelector.currentPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post.loadingStates;\n  }),\n      isPostLoading = _useSelector2.isPostLoading;\n\n  if (isPostLoading) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4!\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Grid, {\n      Item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, currentPost.title)))), __jsx(Grid, {\n      Item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, currentPost.nickname), \" \", __jsx(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, currentPost.Date))))), currentPost && __jsx(Renderer, {\n      raw: JSON.parse(currentPost.body),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n};\n\nPost.getInitialProps = function (ctx) {\n  var _ctx$query = ctx.query,\n      title = _ctx$query.title,\n      category = _ctx$query.category;\n  ctx.store.dispatch({\n    type: FETCH_POST_REQUEST,\n    payload: {\n      title: title,\n      category: category\n    }\n  });\n  return {};\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/webdev/blog/front/pages/post/[category]/[title].tsx"],"names":["React","useSelector","FETCH_POST_REQUEST","Renderer","List","ListItem","ListItemText","Grid","Post","state","post","currentPost","loadingStates","isPostLoading","title","nickname","Date","JSON","parse","body","getInitialProps","ctx","query","category","store","dispatch","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAGA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAEEC,kBAFF,QAGO,gCAHP;AAKA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,IAAvC,QAAmD,mBAAnD;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACOP,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAxB;AAAA,GAAD,CADlB;AAAA,MACTC,WADS,gBACTA,WADS;;AAAA,sBAESV,WAAW,CACnC,UAACQ,KAAD;AAAA,WAAkBA,KAAK,CAACC,IAAN,CAAWE,aAA7B;AAAA,GADmC,CAFpB;AAAA,MAETC,aAFS,iBAETA,aAFS;;AAKjB,MAAIA,aAAJ,EAAmB;AACjB,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CADF;AAKD,GAND,MAMO;AACL,WACE,4BACE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeF,WAAW,CAACG,KAA3B,CADF,CADF,CADF,CADF,EAQE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeH,WAAW,CAACI,QAA3B,CADF,EACsD,GADtD,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeJ,WAAW,CAACK,IAA3B,CAFF,CADF,CADF,CARF,CADF,EAmBGL,WAAW,IAAI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEM,IAAI,CAACC,KAAL,CAAWP,WAAW,CAACQ,IAAvB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBlB,CADF;AAuBD;AACF,CApCD;;AAsCAX,IAAI,CAACY,eAAL,GAAuB,UAAAC,GAAG,EAAI;AAAA,mBACAA,GAAG,CAACC,KADJ;AAAA,MACpBR,KADoB,cACpBA,KADoB;AAAA,MACbS,QADa,cACbA,QADa;AAG5BF,EAAAA,GAAG,CAACG,KAAJ,CAAUC,QAAV,CAAmB;AACjBC,IAAAA,IAAI,EAAExB,kBADW;AAEjByB,IAAAA,OAAO,EAAE;AACPb,MAAAA,KAAK,EAALA,KADO;AAEPS,MAAAA,QAAQ,EAARA;AAFO;AAFQ,GAAnB;AAOA,SAAO,EAAP;AACD,CAXD;;AAaA,eAAef,IAAf","sourcesContent":["import React, { useEffect, Context } from \"react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_POST_REQUEST,\r\n  FETCH_POST_REQUEST\r\n} from \"../../../reducers/post/actions\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport Renderer from \"../../../Components/draft/Renderer\";\r\nimport { List, ListItem, ListItemText, Grid } from \"@material-ui/core\";\r\n\r\nconst Post = () => {\r\n  const { currentPost } = useSelector((state: store) => state.post);\r\n  const { isPostLoading } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중 입니다!</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid container>\r\n          <Grid Item xs={6}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText>{currentPost.title}</ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n          <Grid Item xs={6}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText>{currentPost.nickname}</ListItemText>{\" \"}\r\n                <ListItemText>{currentPost.Date}</ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {currentPost && <Renderer raw={JSON.parse(currentPost.body)} />}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nPost.getInitialProps = ctx => {\r\n  const { title, category } = ctx.query;\r\n\r\n  ctx.store.dispatch({\r\n    type: FETCH_POST_REQUEST,\r\n    payload: {\r\n      title,\r\n      category\r\n    }\r\n  });\r\n  return {};\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}