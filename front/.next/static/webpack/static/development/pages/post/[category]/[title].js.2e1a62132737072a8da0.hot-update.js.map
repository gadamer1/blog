{"version":3,"file":"static/webpack/static\\development\\pages\\post\\[category]\\[title].js.2e1a62132737072a8da0.hot-update.js","sources":["webpack:///./Components/draft/renderer.config.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/redraft/lib/ContentNode.js","webpack:///./node_modules/redraft/lib/RawParser.js","webpack:///./node_modules/redraft/lib/createBlockRenderer.js","webpack:///./node_modules/redraft/lib/createStyleRenderer.js","webpack:///./node_modules/redraft/lib/defaultOptions.js","webpack:///./node_modules/redraft/lib/helpers/CompositeDecorator.js","webpack:///./node_modules/redraft/lib/helpers/MultiDecorator.js","webpack:///./node_modules/redraft/lib/helpers/arrayEqual.js","webpack:///./node_modules/redraft/lib/helpers/checkCleanup.js","webpack:///./node_modules/redraft/lib/helpers/checkJoin.js","webpack:///./node_modules/redraft/lib/helpers/getKeyGenerator.js","webpack:///./node_modules/redraft/lib/helpers/pushString.js","webpack:///./node_modules/redraft/lib/helpers/stubContentBlock.js","webpack:///./node_modules/redraft/lib/helpers/warn.js","webpack:///./node_modules/redraft/lib/index.js","webpack:///./node_modules/redraft/lib/render.js","webpack:///./node_modules/redraft/lib/withDecorators.js","webpack:///(webpack)/buildin/module.js"],"sourcesContent":["import React from \"react\";\r\nimport redraft, { createStylesRenderer, createBlockRenderer } from \"redraft\";\r\n\r\nconst styleMap = {\r\n  BOLD: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  ITALIC: {\r\n    fontStyle: \"italic\"\r\n  },\r\n  UNDERLINE: {\r\n    textDecoration: \"underline\"\r\n  }\r\n};\r\n\r\n// This is a wrapper callback for the inline styles\r\n// the style object contains all the relevant styles from the styleMap\r\n// it needs a key as redraft returns arrays not Components\r\nconst InlineWrapper = ({ children, style, key }) => (\r\n  <span key={key} style={style}>\r\n    {children}\r\n  </span>\r\n);\r\n// this Component results in a flatter output as it can have multiple styles (also possibly less semantic)\r\n\r\n// Api aligned w draft-js, aliasedElements are not required as draft-js uses them for parsing pasted html\r\nconst blockRenderMap = {\r\n  unstyled: {\r\n    element: \"div\"\r\n  },\r\n  blockquote: {\r\n    element: \"blockquote\"\r\n  },\r\n  \"ordered-list-item\": {\r\n    element: \"li\",\r\n    wrapper: \"ol\"\r\n  },\r\n  \"unordered-list-item\": {\r\n    element: \"li\",\r\n    wrapper: \"ul\"\r\n  }\r\n};\r\n\r\nexport const renderers = {\r\n  // note the styles key and createStylesRenderer helper\r\n  styles: createStylesRenderer(InlineWrapper, styleMap),\r\n  blocks: createBlockRenderer(React.createElement, blockRenderMap)\r\n};\r\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _arrayEqual = require('./helpers/arrayEqual');\n\nvar _arrayEqual2 = _interopRequireDefault(_arrayEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ContentNode = function () {\n  function ContentNode(props) {\n    _classCallCheck(this, ContentNode);\n\n    this.content = props.content || [];\n    this.start = typeof props.start !== 'undefined' ? props.start : null;\n    this.end = typeof props.end !== 'undefined' ? props.end : null;\n    this.entity = typeof props.entity !== 'undefined' ? props.entity : null;\n    this.decorator = typeof props.decorator !== 'undefined' ? props.decorator : null;\n    this.decoratorProps = props.decoratorProps || null;\n    this.decoratedText = typeof props.decoratedText !== 'undefined' ? props.decoratedText : null;\n    this.contentState = props.contentState;\n    this.style = props.style || null;\n    this.styles = props.styles || null;\n    this.block = props.block || {};\n  }\n\n  _createClass(ContentNode, [{\n    key: 'getCurrentContent',\n    value: function getCurrentContent() {\n      return this.content[this.content.length - 1];\n    }\n  }, {\n    key: 'addToCurrentContent',\n    value: function addToCurrentContent(string) {\n      this.content[this.content.length - 1] = this.content[this.content.length - 1] + string;\n    }\n  }, {\n    key: 'handleFlatPush',\n    value: function handleFlatPush(string, stack) {\n      var current = this.getCurrentContent();\n      // if the stacks are equal just add the string to the current node\n      if (current instanceof ContentNode && (0, _arrayEqual2.default)(stack, current.styles)) {\n        current.addToCurrentContent(string);\n        return;\n      }\n      // create a node with whole styles stack\n      var newNode = new ContentNode({ styles: [].concat(_toConsumableArray(stack)), content: [string] });\n      this.content.push(newNode);\n    }\n  }, {\n    key: 'pushContent',\n    value: function pushContent(string) {\n      var stack = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var flat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      // we can just concat strings when both the pushed item\n      // and the last element of the content array is a string\n      if (!stack || stack.length < 1) {\n        if (typeof string === 'string' && typeof this.getCurrentContent() === 'string') {\n          this.addToCurrentContent(string);\n        } else {\n          this.content.push(string);\n        }\n        return this;\n      }\n      // handle flat structure\n      if (flat) {\n        this.handleFlatPush(string, stack);\n        return this;\n      }\n\n      var _stack = _toArray(stack),\n          head = _stack[0],\n          rest = _stack.slice(1);\n\n      var current = this.getCurrentContent();\n      if (current instanceof ContentNode && current.style === head) {\n        current.pushContent(string, rest, flat);\n      } else {\n        var newNode = new ContentNode({ style: head });\n        newNode.pushContent(string, rest, flat);\n        this.content.push(newNode);\n      }\n      return this;\n    }\n  }]);\n\n  return ContentNode;\n}();\n\nexports.default = ContentNode;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _punycode = require('punycode');\n\nvar _punycode2 = _interopRequireDefault(_punycode);\n\nvar _ContentNode = require('./ContentNode');\n\nvar _ContentNode2 = _interopRequireDefault(_ContentNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Slices the decoded ucs2 array and encodes the result back to a string representation\n */\nvar getString = function getString(array, from, to) {\n  return _punycode2.default.ucs2.encode(array.slice(from, to));\n};\n\n/**\n * creates nodes with entity keys and the endOffset\n */\nfunction createNodes(entityRanges) {\n  var decoratorRanges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var textArray = arguments[2];\n  var block = arguments[3];\n\n  var lastIndex = 0;\n  var mergedRanges = [].concat(_toConsumableArray(entityRanges), _toConsumableArray(decoratorRanges)).sort(function (a, b) {\n    return a.offset - b.offset;\n  });\n  var nodes = [];\n  // if thers no entities will return just a single item\n  if (mergedRanges.length < 1) {\n    nodes.push(new _ContentNode2.default({ block: block, start: 0, end: textArray.length }));\n    return nodes;\n  }\n\n  mergedRanges.forEach(function (range) {\n    // create an empty node for content between previous and this entity\n    if (range.offset > lastIndex) {\n      nodes.push(new _ContentNode2.default({ block: block, start: lastIndex, end: range.offset }));\n    }\n    // push the node for the entity\n    nodes.push(new _ContentNode2.default({\n      block: block,\n      entity: range.key,\n      decorator: range.component,\n      decoratorProps: range.decoratorProps,\n      decoratedText: range.component ? getString(textArray, range.offset, range.offset + range.length) : undefined,\n      start: range.offset,\n      end: range.offset + range.length,\n      contentState: range.contentState\n    }));\n    lastIndex = range.offset + range.length;\n  });\n\n  // finaly add a node for the remaining text if any\n  if (lastIndex < textArray.length) {\n    nodes.push(new _ContentNode2.default({\n      block: block,\n      start: lastIndex,\n      end: textArray.length\n    }));\n  }\n  return nodes;\n}\n\nfunction addIndexes(indexes, ranges) {\n  ranges.forEach(function (range) {\n    indexes.push(range.offset);\n    indexes.push(range.offset + range.length);\n  });\n  return indexes;\n}\n\n/**\n * Creates an array of sorted char indexes to avoid iterating over every single character\n */\nfunction getRelevantIndexes(text, inlineRanges) {\n  var entityRanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var decoratorRanges = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  var relevantIndexes = [];\n  // set indexes to corresponding keys to ensure uniquenes\n  relevantIndexes = addIndexes(relevantIndexes, inlineRanges);\n  relevantIndexes = addIndexes(relevantIndexes, entityRanges);\n  relevantIndexes = addIndexes(relevantIndexes, decoratorRanges);\n  // add text start and end to relevant indexes\n  relevantIndexes.push(0);\n  relevantIndexes.push(text.length);\n  var uniqueRelevantIndexes = relevantIndexes.filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  });\n  // and sort it\n  return uniqueRelevantIndexes.sort(function (aa, bb) {\n    return aa - bb;\n  });\n}\n\nvar RawParser = function () {\n  function RawParser(_ref) {\n    var _ref$flat = _ref.flat,\n        flat = _ref$flat === undefined ? false : _ref$flat;\n\n    _classCallCheck(this, RawParser);\n\n    this.flat = flat;\n  }\n\n  _createClass(RawParser, [{\n    key: 'relevantStyles',\n    value: function relevantStyles(offset) {\n      var styles = this.ranges.filter(function (range) {\n        return offset >= range.offset && offset < range.offset + range.length;\n      });\n      return styles.map(function (style) {\n        return style.style;\n      });\n    }\n\n    /**\n     * Loops over relevant text indexes\n     */\n\n  }, {\n    key: 'nodeIterator',\n    value: function nodeIterator(node, start, end) {\n      var _this = this;\n\n      var indexes = this.relevantIndexes.slice(this.relevantIndexes.indexOf(start), this.relevantIndexes.indexOf(end));\n      // loops while next index is smaller than the endOffset\n      indexes.forEach(function (index, key) {\n        // figure out what styles this char and the next char need\n        // (regardless of whether there *is* a next char or not)\n        var characterStyles = _this.relevantStyles(index);\n        // calculate distance or set it to 1 if thers no next index\n        var distance = indexes[key + 1] ? indexes[key + 1] - index : 1;\n        // add all the chars up to next relevantIndex\n        var text = getString(_this.textArray, index, index + distance);\n        node.pushContent(text, characterStyles, _this.flat);\n\n        // if thers no next index and thers more text left to push\n        if (!indexes[key + 1] && index < end) {\n          node.pushContent(getString(_this.textArray, index + 1, end), _this.relevantStyles(end - 1), _this.flat);\n        }\n      });\n      return node;\n    }\n\n    /**\n     * Converts raw block to object with nested style objects,\n     * while it returns an object not a string\n     * the idea is still mostly same as backdraft.js (https://github.com/evanc/backdraft-js)\n     */\n\n  }, {\n    key: 'parse',\n    value: function parse(block) {\n      var _this2 = this;\n\n      var text = block.text,\n          ranges = block.inlineStyleRanges,\n          entityRanges = block.entityRanges,\n          _block$decoratorRange = block.decoratorRanges,\n          decoratorRanges = _block$decoratorRange === undefined ? [] : _block$decoratorRange;\n      // Some unicode charactes actualy have length of more than 1\n      // this creates an array of code points using es6 string iterator\n\n      this.textArray = _punycode2.default.ucs2.decode(text);\n      this.ranges = ranges;\n      this.iterator = 0;\n      // get all the relevant indexes for whole block\n      this.relevantIndexes = getRelevantIndexes(text, ranges, entityRanges, decoratorRanges);\n      // create entity or empty nodes to place the inline styles in\n      var nodes = createNodes(entityRanges, decoratorRanges, this.textArray, block);\n      var parsedNodes = nodes.map(function (node) {\n        return _this2.nodeIterator(node, node.start, node.end);\n      });\n      return new _ContentNode2.default({ block: block, content: parsedNodes });\n    }\n  }]);\n\n  return RawParser;\n}();\n\nexports.default = RawParser;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar KEY_DELIMITER = ',';\n\n// Return either a single key if present or joined keys array from props;\nvar getKey = function getKey(_ref, key) {\n  var keys = _ref.keys;\n\n  if (key) {\n    return key;\n  }\n  if (!keys) {\n    return undefined;\n  }\n  return keys.join(KEY_DELIMITER);\n};\n\n// Call the wrapper with element, props, and spread children\n// this order is specific to React.createElement\nvar getBlock = function getBlock(element, wrapper) {\n  return function (children, properties, key) {\n    var props = Object.assign({}, properties);\n    var blockKey = getKey(props, key);\n    delete props.depth;\n    delete props.keys;\n    return wrapper.apply(undefined, [element, Object.assign({}, props, { key: blockKey })].concat(_toConsumableArray(children)));\n  };\n};\n\n// Handle blocks with wrapper element defined\nvar getWrappedChildren = function getWrappedChildren(callback, block, _ref2) {\n  var children = _ref2.children,\n      props = _ref2.props,\n      key = _ref2.key;\n\n  var wrapperBlockFn = getBlock(block.wrapper, callback);\n  var blockFn = getBlock(block.element, callback, true);\n  return wrapperBlockFn(children.map(function (child, ii) {\n    return blockFn(child, { depth: props.depth }, props.keys && props.keys[ii]);\n  }), props, key);\n};\n\n/**\n* Returns a blockRenderer crated from a blockRendererMap using a callback ie. React.createElement\n*/\nvar createBlockRenderer = function createBlockRenderer(callback, blockMap) {\n  var renderer = {};\n  Object.keys(blockMap).forEach(function (item) {\n    var block = blockMap[item];\n    // If wrapper is present children need to be nested inside\n    if (block.wrapper) {\n      renderer[item] = function (children, props, key) {\n        return getWrappedChildren(callback, block, {\n          children: children,\n          props: props,\n          key: key\n        });\n      };\n      return;\n    }\n    // Wrapper is not present\n    renderer[item] = getBlock(block.element, callback);\n  });\n  return renderer;\n};\n\nexports.default = createBlockRenderer;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Returns a single style object provided styleArray and stylesMap\n */\nvar reduceStyles = function reduceStyles(styleArray, stylesMap) {\n  return styleArray.map(function (style) {\n    return stylesMap[style];\n  }).reduce(function (prev, next) {\n    var mergedStyles = {};\n    if (next !== undefined) {\n      var key = 'text-decoration' in next ? 'text-decoration' : 'textDecoration';\n      if (next[key] !== prev[key]) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles[key] = [prev[key], next[key]].join(' ').trim();\n      }\n    }\n    return Object.assign(prev, next, mergedStyles);\n  }, {});\n};\n\n/**\n * Returns a styleRenderer from a customStyleMap and a wrapper callback (Component)\n */\nvar createStyleRenderer = function createStyleRenderer(wrapper, stylesMap) {\n  return function (children, styleArray, params) {\n    var style = reduceStyles(styleArray, stylesMap);\n    return wrapper(Object.assign({}, { children: children }, params, { style: style }));\n  };\n};\n\nexports.default = createStyleRenderer;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar defaultOptions = {\n  joinOutput: false,\n  cleanup: {\n    after: ['atomic'],\n    types: ['unstyled'],\n    trim: false,\n    split: true\n  },\n  blockFallback: 'unstyled'\n};\n\nexports.default = defaultOptions;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nvar DELIMITER = '.';\n\n/**\n * Determine whether we can occupy the specified slice of the decorations\n * array.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\n/**\n * This is only slighly modified version of draft-js CompositeDraftDecorator\n * https://github.com/facebook/draft-js/blob/dc27624caaaede4dad9d182ff9918a5da8f83c99/src/model/decorators/CompositeDraftDecorator.js\n *\n * Basicly it just swaps the Immutable.js List with own ListStub\n *\n * \n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nfunction canOccupySlice(decorations, start, end) {\n  // eslint-disable-next-line no-plusplus\n  for (var ii = start; ii < end; ii++) {\n    if (decorations[ii] != null) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Splice the specified component into our decoration array at the desired\n * range.\n */\nfunction occupySlice(targetArr, start, end, componentKey) {\n  // eslint-disable-next-line no-plusplus\n  for (var ii = start; ii < end; ii++) {\n    // eslint-disable-next-line no-param-reassign\n    targetArr[ii] = componentKey;\n  }\n}\n/**\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\n * instances to identify sections of a ContentBlock that should be rendered\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\n * be intended to stand out visually, be rendered as anchors, etc.\n *\n * The list of decorators supplied to the constructor will be used in the\n * order they are provided. This allows the caller to specify a priority for\n * string matching, in case of match collisions among decorators.\n *\n * For instance, I may have a link with a `#` in its text. Though this section\n * of text may match our hashtag decorator, it should not be treated as a\n * hashtag. I should therefore list my link DraftDecorator\n * before my hashtag DraftDecorator when constructing this composite\n * decorator instance.\n *\n * Thus, when a collision like this is encountered, the earlier match is\n * preserved and the new match is discarded.\n */\n\nvar CompositeDraftDecorator = function () {\n  function CompositeDraftDecorator(decorators) {\n    _classCallCheck(this, CompositeDraftDecorator);\n\n    // Copy the decorator array, since we use this array order to determine\n    // precedence of decoration matching. If the array is mutated externally,\n    // we don't want to be affected here.\n    this.decorators = decorators.slice();\n  }\n\n  _createClass(CompositeDraftDecorator, [{\n    key: 'getDecorations',\n    value: function getDecorations(block, contentState) {\n      var decorations = Array(block.getText().length).fill(null);\n\n      this.decorators.forEach(function ( /* object*/decorator, /* number*/ii) {\n        var counter = 0;\n        var strategy = decorator.strategy;\n\n        var callback = function callback( /* number*/start, /* number*/end) {\n          // Find out if any of our matching range is already occupied\n          // by another decorator. If so, discard the match. Otherwise, store\n          // the component key for rendering.\n          if (canOccupySlice(decorations, start, end)) {\n            occupySlice(decorations, start, end, ii + DELIMITER + counter);\n            // eslint-disable-next-line no-plusplus\n            counter++;\n          }\n        };\n        strategy(block, callback, contentState);\n      });\n\n      return decorations;\n    }\n  }, {\n    key: 'getComponentForKey',\n    value: function getComponentForKey(key) {\n      var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n      return this.decorators[componentKey].component;\n    }\n  }, {\n    key: 'getPropsForKey',\n    value: function getPropsForKey(key) {\n      var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n      return this.decorators[componentKey].props;\n    }\n  }]);\n\n  return CompositeDraftDecorator;\n}();\n\nexports.default = CompositeDraftDecorator;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEY_SEPARATOR = '-';\n\nvar MultiDecorator = function () {\n  function MultiDecorator(decorators) {\n    _classCallCheck(this, MultiDecorator);\n\n    this.decorators = decorators;\n  }\n\n  /**\n   * Return list of decoration IDs per character\n   *\n   * @param {ContentBlock} block\n   * @return {List<String>}\n   */\n\n\n  _createClass(MultiDecorator, [{\n    key: 'getDecorations',\n    value: function getDecorations(block, contentState) {\n      var decorations = new Array(block.getText().length).fill(null);\n      this.decorators.forEach(function (decorator, i) {\n        var subDecorations = decorator.getDecorations(block, contentState);\n\n        subDecorations.forEach(function (key, offset) {\n          if (!key) {\n            return;\n          }\n\n          decorations[offset] = i + KEY_SEPARATOR + key;\n        });\n      });\n\n      return decorations;\n    }\n\n    /**\n     * Return component to render a decoration\n     *\n     * @param {String} key\n     * @return {Function}\n     */\n\n  }, {\n    key: 'getComponentForKey',\n    value: function getComponentForKey(key) {\n      var decorator = this.getDecoratorForKey(key);\n      return decorator.getComponentForKey(MultiDecorator.getInnerKey(key));\n    }\n\n    /**\n     * Return props to render a decoration\n     *\n     * @param {String} key\n     * @return {Object}\n     */\n\n  }, {\n    key: 'getPropsForKey',\n    value: function getPropsForKey(key) {\n      var decorator = this.getDecoratorForKey(key);\n      return decorator.getPropsForKey(MultiDecorator.getInnerKey(key));\n    }\n\n    /**\n     * Return a decorator for a specific key\n     *\n     * @param {String} key\n     * @return {Decorator}\n     */\n\n  }, {\n    key: 'getDecoratorForKey',\n    value: function getDecoratorForKey(key) {\n      var parts = key.split(KEY_SEPARATOR);\n      var index = Number(parts[0]);\n\n      return this.decorators[index];\n    }\n\n    /**\n     * Return inner key for a decorator\n     *\n     * @param {String} key\n     * @return {String}\n     */\n\n  }], [{\n    key: 'getInnerKey',\n    value: function getInnerKey(key) {\n      var parts = key.split(KEY_SEPARATOR);\n      return parts.slice(1).join(KEY_SEPARATOR);\n    }\n  }]);\n\n  return MultiDecorator;\n}();\n\nexports.default = MultiDecorator;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Very simple array comparison\n */\nvar arraysEqual = function arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  // defining for loops with airbnb config is a pain maybe should disable some rules\n  // eslint-disable-next-line\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.default = arraysEqual;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Check if block has any text, respects trim setting\n */\nvar hasText = function hasText(text, _ref) {\n  var trim = _ref.trim;\n  return !!(trim ? text.trim() : text);\n};\n\n/**\n * Check if block has any data like text, metadata or entities\n */\nvar hasData = function hasData(block, options) {\n  if (hasText(block.text, options)) {\n    return true;\n  }\n  if (block.data && Object.keys(block.data).length) {\n    return true;\n  }\n  if (block.entityRanges && block.entityRanges.length) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Checks if current block is empty and if it should be ommited according to passed settings\n */\nvar checkCleanup = function checkCleanup(block, prevType, _ref2) {\n  var cleanup = _ref2.cleanup;\n\n  if (!cleanup || hasData(block, cleanup)) {\n    return false;\n  }\n  // Check if cleanup is enabled after prev type\n  if (cleanup.after && cleanup.after !== 'all' && !(cleanup.after.indexOf(prevType) !== -1)) {\n    return false;\n  }\n  // Handle the except array if passed\n  if (cleanup.except && !(cleanup.except.indexOf(block.type) !== -1)) {\n    return true;\n  }\n  // Finaly if cleanup is enabled for current type\n  if (cleanup.types && (cleanup.types === 'all' || cleanup.types.indexOf(block.type) !== -1)) {\n    return true;\n  }\n  return false;\n};\n\nexports.default = checkCleanup;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Joins the input if the joinOutput option is enabled\n */\nvar checkJoin = function checkJoin(input, options) {\n  if (Array.isArray(input) && options.joinOutput) {\n    return input.join('');\n  }\n  return input;\n};\n\nexports.default = checkJoin;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// return a new generator wich produces sequential keys for nodes\nvar getKeyGenerator = function getKeyGenerator() {\n  var key = 0;\n  var keyGenerator = function keyGenerator() {\n    var current = key;\n    key += 1;\n    return current; // eslint-disable-line no-plusplus\n  };\n  return keyGenerator;\n};\n\nexports.default = getKeyGenerator;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Concats or insets a string at given array index\n */\nvar pushString = function pushString(string, array, index) {\n  var tempArray = array;\n  if (!array[index]) {\n    tempArray[index] = string;\n  } else {\n    tempArray[index] += string;\n  }\n  return tempArray;\n};\n\nexports.default = pushString;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This is a simple replacement for draft-js ContentBlock,\n * CharacterList or any related methods are not implented here\n */\n\nvar ContentBlockStub = function () {\n  function ContentBlockStub(block) {\n    _classCallCheck(this, ContentBlockStub);\n\n    Object.assign(this, block);\n  }\n\n  _createClass(ContentBlockStub, [{\n    key: \"get\",\n    value: function get(name) {\n      return this[name];\n    }\n  }, {\n    key: \"getText\",\n    value: function getText() {\n      return this.text;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this.type;\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey() {\n      return this.key;\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.text.length;\n    }\n  }, {\n    key: \"getDepth\",\n    value: function getDepth() {\n      return this.depth;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return this.data;\n    }\n  }]);\n\n  return ContentBlockStub;\n}();\n\nvar stubContentBlock = function stubContentBlock(block) {\n  return new ContentBlockStub(block);\n};\n\nexports.default = stubContentBlock;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Logs a warning message if not in production\n */\nvar warn = function warn(msg) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Redraft: ' + msg); // eslint-disable-line no-console\n  }\n};\n\nexports.default = warn;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositeDecorator = exports.renderNode = exports.RawParser = exports.createBlockRenderer = exports.createStylesRenderer = undefined;\n\nvar _RawParser = require('./RawParser');\n\nvar _RawParser2 = _interopRequireDefault(_RawParser);\n\nvar _createStyleRenderer = require('./createStyleRenderer');\n\nvar _createStyleRenderer2 = _interopRequireDefault(_createStyleRenderer);\n\nvar _render = require('./render');\n\nvar _CompositeDecorator = require('./helpers/CompositeDecorator');\n\nvar _CompositeDecorator2 = _interopRequireDefault(_CompositeDecorator);\n\nvar _createBlockRenderer = require('./createBlockRenderer');\n\nvar _createBlockRenderer2 = _interopRequireDefault(_createBlockRenderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.createStylesRenderer = _createStyleRenderer2.default;\nexports.createBlockRenderer = _createBlockRenderer2.default;\nexports.RawParser = _RawParser2.default;\nexports.renderNode = _render.renderNode;\nexports.CompositeDecorator = _CompositeDecorator2.default;\nexports.default = _render.render;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.render = exports.renderNode = undefined;\n\nvar _RawParser = require('./RawParser');\n\nvar _RawParser2 = _interopRequireDefault(_RawParser);\n\nvar _warn = require('./helpers/warn');\n\nvar _warn2 = _interopRequireDefault(_warn);\n\nvar _checkCleanup = require('./helpers/checkCleanup');\n\nvar _checkCleanup2 = _interopRequireDefault(_checkCleanup);\n\nvar _getKeyGenerator = require('./helpers/getKeyGenerator');\n\nvar _getKeyGenerator2 = _interopRequireDefault(_getKeyGenerator);\n\nvar _checkJoin = require('./helpers/checkJoin');\n\nvar _checkJoin2 = _interopRequireDefault(_checkJoin);\n\nvar _pushString = require('./helpers/pushString');\n\nvar _pushString2 = _interopRequireDefault(_pushString);\n\nvar _defaultOptions = require('./defaultOptions');\n\nvar _defaultOptions2 = _interopRequireDefault(_defaultOptions);\n\nvar _withDecorators = require('./withDecorators');\n\nvar _withDecorators2 = _interopRequireDefault(_withDecorators);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar KEY_DELIMITER = '.';\n\n/**\n * Recursively renders a node with nested nodes with given callbacks\n */\nvar renderNode = exports.renderNode = function renderNode(node, inlineRenderers, entityRenderers, styleRenderers, entityMap, options, keyGenerator) {\n  if (node.styles && styleRenderers) {\n    return styleRenderers((0, _checkJoin2.default)(node.content, options), node.styles, { key: keyGenerator() });\n  }\n  var children = [];\n  var index = 0;\n  node.content.forEach(function (part) {\n    if (typeof part === 'string') {\n      children = (0, _pushString2.default)(part, children, index);\n    } else {\n      index += 1;\n      children[index] = renderNode(part, inlineRenderers, entityRenderers, styleRenderers, entityMap, options, keyGenerator);\n      index += 1;\n    }\n  });\n  if (node.style && inlineRenderers[node.style]) {\n    return inlineRenderers[node.style]((0, _checkJoin2.default)(children, options), { key: keyGenerator() });\n  }\n  if (node.entity !== null) {\n    var entity = entityMap[node.entity];\n    if (entity && entityRenderers[entity.type]) {\n      return entityRenderers[entity.type]((0, _checkJoin2.default)(children, options), entity.data, { key: node.entity });\n    }\n  }\n  if (node.decorator !== null) {\n    // FIXME: few props are missing see https://github.com/facebook/draft-js/blob/0c609d9d3671fdbbe2a290ed160a0537f846f08e/src/component/contents/DraftEditorBlock.react.js#L196-L205\n    var decoratorOffsetKey = [node.block.key, node.start, 0].join(KEY_DELIMITER);\n    return node.decorator(Object.assign({\n      children: (0, _checkJoin2.default)(children, options),\n      decoratedText: node.decoratedText,\n      contentState: node.contentState,\n      entityKey: node.entity,\n      offsetKey: decoratorOffsetKey,\n      key: decoratorOffsetKey\n    }, node.decoratorProps));\n  }\n  return children;\n};\n\n/**\n * Nests blocks by depth as children\n */\nvar byDepth = function byDepth(blocks) {\n  var group = [];\n  var depthStack = [];\n  var prevDepth = 0;\n  var unwind = function unwind(targetDepth) {\n    var i = prevDepth - targetDepth;\n    // in case depthStack is too short for target depth\n    if (depthStack.length < i) {\n      i = depthStack.length;\n    }\n    for (i; i > 0; i -= 1) {\n      var tmp = group;\n      group = depthStack.pop();\n      group[group.length - 1].children = tmp;\n    }\n  };\n\n  blocks.forEach(function (block) {\n    // if type of the block has changed render the block and clear group\n    if (prevDepth < block.depth) {\n      depthStack.push(group);\n      group = [];\n    } else if (prevDepth > block.depth) {\n      unwind(block.depth);\n    }\n    prevDepth = block.depth;\n    group.push(Object.assign({}, block));\n  });\n  if (prevDepth !== 0) {\n    unwind(0);\n  }\n  return group;\n};\n\n/**\n * Conditionaly render a group if its not empty,\n * pass all the params to the renderers\n */\nvar renderGroup = function renderGroup(group, blockRenderers, rendered, params, options) {\n  var type = params.prevType,\n      depth = params.prevDepth,\n      keys = params.prevKeys,\n      data = params.prevData;\n  // in case current group is empty it should not be rendered\n\n  if (group.length === 0) {\n    return;\n  }\n  var renderCb = blockRenderers[type] || blockRenderers[options.blockFallback];\n  if (renderCb) {\n    var props = {\n      depth: depth,\n      keys: keys\n    };\n    if (data && data.some(function (item) {\n      return !!item;\n    })) {\n      props.data = data;\n    }\n    rendered.push(renderCb(group, props));\n    return;\n  }\n  rendered.push(group);\n};\n\n/**\n * Renders blocks grouped by type using provided blockStyleRenderers\n */\nvar renderBlocks = function renderBlocks(blocks) {\n  var inlineRenderers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var blockRenderers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var entityRenderers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var stylesRenderer = arguments[4];\n  var entityMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var userOptions = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\n  // initialize\n  var options = Object.assign({}, _defaultOptions2.default, userOptions);\n  var rendered = [];\n  var group = [];\n  var prevType = null;\n  var prevDepth = 0;\n  var prevKeys = [];\n  var prevData = [];\n  var splitGroup = false;\n  var Parser = new _RawParser2.default({ flat: !!stylesRenderer });\n  blocks.forEach(function (block) {\n    if ((0, _checkCleanup2.default)(block, prevType, options)) {\n      // Set the split flag if enabled\n      if (options.cleanup.split === true) {\n        splitGroup = true;\n      }\n      return;\n    }\n    var node = Parser.parse(block);\n    var renderedNode = renderNode(node, inlineRenderers, entityRenderers, stylesRenderer, entityMap, options, (0, _getKeyGenerator2.default)());\n    // if type of the block has changed or the split flag is set\n    // render and clear group\n    if (prevType && prevType !== block.type || splitGroup) {\n      renderGroup(group, blockRenderers, rendered, { prevType: prevType, prevDepth: prevDepth, prevKeys: prevKeys, prevData: prevData }, options);\n      // reset group vars\n      // IDEA: might be worth to group those into an instance and just newup a new one\n      prevData = [];\n      prevKeys = [];\n      group = [];\n      splitGroup = false;\n    }\n    // handle children\n    if (block.children) {\n      var children = renderBlocks(block.children, inlineRenderers, blockRenderers, entityRenderers, stylesRenderer, entityMap, options);\n      renderedNode.push(children);\n    }\n    // push current node to group\n    group.push(renderedNode);\n\n    // lastly save current type for refference\n    prevType = block.type;\n    prevDepth = block.depth;\n    prevKeys.push(block.key);\n    prevData.push(block.data);\n  });\n  // render last group\n  renderGroup(group, blockRenderers, rendered, { prevType: prevType, prevDepth: prevDepth, prevKeys: prevKeys, prevData: prevData }, options);\n  return (0, _checkJoin2.default)(rendered, options);\n};\n\n/**\n * Converts and renders each block of Draft.js rawState\n */\nvar render = exports.render = function render(raw) {\n  var renderers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!raw || !Array.isArray(raw.blocks)) {\n    (0, _warn2.default)('invalid raw object');\n    return null;\n  }\n  // If the lenght of the blocks array is 0 its should not log a warning but still return a null\n  if (!raw.blocks.length) {\n    return null;\n  }\n  var inlineRenderers = renderers.inline,\n      blockRenderers = renderers.blocks,\n      entityRenderers = renderers.entities,\n      stylesRenderer = renderers.styles,\n      decorators = renderers.decorators;\n  // If decorators are present, they are maped with the blocks array\n\n  var blocksWithDecorators = decorators ? (0, _withDecorators2.default)(raw, decorators, options) : raw.blocks;\n  // Nest blocks by depth\n  var blocks = byDepth(blocksWithDecorators);\n  return renderBlocks(blocks, inlineRenderers, blockRenderers, entityRenderers, stylesRenderer, raw.entityMap, options);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _punycode = require('punycode');\n\nvar _punycode2 = _interopRequireDefault(_punycode);\n\nvar _CompositeDecorator = require('./helpers/CompositeDecorator');\n\nvar _CompositeDecorator2 = _interopRequireDefault(_CompositeDecorator);\n\nvar _MultiDecorator = require('./helpers/MultiDecorator');\n\nvar _MultiDecorator2 = _interopRequireDefault(_MultiDecorator);\n\nvar _stubContentBlock = require('./helpers/stubContentBlock');\n\nvar _stubContentBlock2 = _interopRequireDefault(_stubContentBlock);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Use CompositeDecorator to build decoratorRanges with ranges, components, and props\n */\n\n// This offsets or rather recalculates ranges for decorators\n// with punycode.ucs2.decode\nvar offsetRanges = function offsetRanges(ranges, block) {\n  // if there are no decorator skip this step\n  ranges.forEach(function (range) {\n    var pre = block.text.substring(0, range.offset);\n    var decorated = block.text.substring(range.offset, range.offset + range.length);\n    // eslint-disable-next-line no-param-reassign\n    range.offset = _punycode2.default.ucs2.decode(pre).length;\n    // eslint-disable-next-line no-param-reassign\n    range.length = _punycode2.default.ucs2.decode(decorated).length;\n  });\n  return ranges;\n};\n// Return true if decorator implements the DraftDecoratorType interface\n// @see https://github.com/facebook/draft-js/blob/master/src/model/decorators/DraftDecoratorType.js\nvar decoratorIsCustom = function decoratorIsCustom(decorator) {\n  return typeof decorator.getDecorations === 'function' && typeof decorator.getComponentForKey === 'function' && typeof decorator.getPropsForKey === 'function';\n};\n\nvar resolveDecorators = function resolveDecorators(decorators) {\n  var compositeDecorator = new _CompositeDecorator2.default(decorators.filter(function (decorator) {\n    return !decoratorIsCustom(decorator);\n  }));\n\n  var customDecorators = decorators.filter(function (decorator) {\n    return decoratorIsCustom(decorator);\n  });\n  var decor = [].concat(_toConsumableArray(customDecorators), [compositeDecorator]);\n  return new _MultiDecorator2.default(decor);\n};\n\nvar decorateBlock = function decorateBlock(block, decorators, contentState, _ref) {\n  var createContentBlock = _ref.createContentBlock;\n\n  var decoratorRanges = [];\n  // create a Decorator instance\n  var decorator = resolveDecorators(decorators);\n  // create ContentBlock or a stub\n  var contentBlock = createContentBlock ? createContentBlock(block) : (0, _stubContentBlock2.default)(block);\n  // Get decorations from CompositeDecorator instance\n  var decorations = decorator.getDecorations(contentBlock, contentState);\n  // Keep track of offset for current key\n  var offset = 0;\n  decorations.forEach(function (key, index) {\n    // If no key just move the offset\n    if (!key) {\n      offset += 1;\n      return;\n    }\n    // get next key\n    var nextIndex = index + 1;\n    var next = decorations[nextIndex];\n    // if thers no next key or the key chages build a decoratorRange entry\n    if (!next || next !== key) {\n      decoratorRanges.push({\n        offset: offset,\n        length: nextIndex - offset,\n        component: decorator.getComponentForKey(key),\n        decoratorProps: decorator.getPropsForKey(key) || {},\n        // save reference to contentState\n        contentState: contentState\n      });\n      // reset the offset to next index\n      offset = nextIndex;\n    }\n  });\n  // merge the block with decoratorRanges\n  return Object.assign({}, block, {\n    decoratorRanges: offsetRanges(decoratorRanges, block)\n  });\n};\n\nvar withDecorators = function withDecorators(raw, decorators, options) {\n  var contentState = options.convertFromRaw && options.convertFromRaw(raw);\n  return raw.blocks.map(function (block) {\n    return decorateBlock(block, decorators, contentState, options || {});\n  });\n};\n\nexports.default = withDecorators;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAiaA;AACA;AACA;;;;;;;;;;;;;;ACphBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChztBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChhsourceRoot":""}