{"version":3,"file":"static/webpack/static\\development\\pages\\post\\[category]\\[title].js.6c80cf736abca82c8319.hot-update.js","sources":["webpack:///./pages/post/[category]/[title].tsx"],"sourcesContent":["import React, { useEffect, Context } from \"react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_POST_REQUEST,\r\n  FETCH_POST_REQUEST,\r\n  DELETE_POST_REQUEST\r\n} from \"../../../reducers/post/actions\";\r\nimport { store } from \"../../../reducers/types\";\r\nimport { Grid, Typography, Chip, Button } from \"@material-ui/core\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Face as FaceIcon } from \"@material-ui/icons\";\r\nimport Router from \"next/router\";\r\nimport Breadcrumb from \"../../../Components/BreadCrumb\";\r\nimport CustomMarkdown from \"../../../Components/CustomMarkdown\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"80%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      justifyContent: \"center\",\r\n      paddingLeft: \"20px\"\r\n    },\r\n    container: {\r\n      marginBottom: \"200px\"\r\n    },\r\n    title: {\r\n      border: \"1px solid black\"\r\n    }\r\n  })\r\n);\r\n\r\nconst Post = () => {\r\n  const classes = useStyles({});\r\n  const dispatch = useDispatch();\r\n  const { currentPost } = useSelector((state: store) => state.post);\r\n  const { isPostLoading, isPostDeleting, isPostDeleteSuccess } = useSelector(\r\n    (state: store) => state.post.loadingStates\r\n  );\r\n  const { me } = useSelector((state: store) => state.user);\r\n  const { category, title } = useRouter().query;\r\n\r\n  useEffect(() => {\r\n    if (isPostDeleteSuccess) {\r\n      Router.push(`/post/${category}`);\r\n    }\r\n  }, [isPostDeleteSuccess]);\r\n\r\n  const _onClickNickname = nickname => () => {\r\n    Router.push(`/profile/${nickname}`);\r\n  };\r\n\r\n  const _onClickDeleteButton = e => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: DELETE_POST_REQUEST,\r\n      payload: {\r\n        nickname: currentPost.nickname,\r\n        userId: me._id\r\n      }\r\n    });\r\n  };\r\n\r\n  if (isPostLoading) {\r\n    return (\r\n      <>\r\n        <div>로딩중 입니다!</div>\r\n      </>\r\n    );\r\n  } else if (currentPost) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Breadcrumb category={category} title={title} />\r\n        <Grid container className={classes.container}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" color=\"secondary\">\r\n              제목\r\n              <Typography variant=\"h4\" color=\"primary\">\r\n                {currentPost.title}\r\n              </Typography>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ float: \"right\" }}>\r\n            <Chip\r\n              icon={<FaceIcon />}\r\n              onClick={_onClickNickname(currentPost.nickname)}\r\n              label={currentPost.nickname}\r\n            />\r\n            {me && me._id === currentPost._id && (\r\n              <Button color=\"secondary\" onClick={_onClickDeleteButton} />\r\n            )}\r\n            <Typography color=\"textSecondary\">{currentPost.Date}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {currentPost && <CustomMarkdown source={currentPost.body} />}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>포스트가 존재하지 않습니다</div>;\r\n  }\r\n};\r\n\r\nPost.getInitialProps = ctx => {\r\n  const { title, category } = ctx.query;\r\n\r\n  ctx.store.dispatch({\r\n    type: FETCH_POST_REQUEST,\r\n    payload: {\r\n      title,\r\n      category\r\n    }\r\n  });\r\n  return {};\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAVA;AADA;AACA;AAgsourceRoot":""}