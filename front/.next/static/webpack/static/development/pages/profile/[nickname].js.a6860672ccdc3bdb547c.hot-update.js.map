{"version":3,"file":"static/webpack/static\\development\\pages\\profile\\[nickname].js.a6860672ccdc3bdb547c.hot-update.js","sources":["webpack:///./Components/profile/ProfileContainer.tsx","webpack:///./Components/profile/UserInfo.tsx","webpack:///./Components/profile/UserPostList.tsx","webpack:///./pages/profile/[nickname].tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport UserPostList from \"./UserPostList\";\r\n\r\nconst ProfileContaier = () => {\r\n  return (\r\n    <Container>\r\n      <UserInfo />\r\n      <UserPostList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileContaier;\r\n","import React from \"react\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { NextComponentType, NextPage } from \"next\";\r\nimport { user } from \"../../reducers/user/interfaces\";\r\n\r\nconst UserInfo: NextPage<{ user: user }> = ({ user }) => {\r\n  return (\r\n    <Card>\r\n      <Typography>{user.nickname}</Typography>\r\n      <Typography>{user.email}</Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport { NextPage } from \"next\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport { user } from \"../../reducers/user/interfaces\";\r\nimport { post } from \"../../reducers/post/interfaces\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n    },\r\n    inline: {\r\n      display: \"inline\"\r\n    }\r\n  })\r\n);\r\n\r\nconst UserPostList: NextPage<{ postList: post[] }> = ({ postList }) => {\r\n  const classes = useStyles({});\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {postList.map(post => {\r\n        return (\r\n          <>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemText\r\n                primary={post.title}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {post.category}\r\n                    </Typography>\r\n                    {post.Date}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n          </>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default UserPostList;\r\n","import React from \"react\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { store } from \"../../reducers/types\";\r\nimport IsLoadingUser from \"../../Components/IsLoadingUser\";\r\nimport { GET_USER_BY_NICKNAME_REQUEST } from \"../../reducers/user/actions\";\r\nimport ProfileContaier from \"../../Components/profile/ProfileContainer\";\r\n\r\nconst Profile = () => {\r\n  const { isLoggedIn } = useSelector((state: store) => state.user.metaStates);\r\n\r\n  if (isLoggedIn) {\r\n    return <ProfileContaier />;\r\n  } else {\r\n    return <IsLoadingUser />;\r\n  }\r\n};\r\n\r\nProfile.getInitialProps = async ctx => {\r\n  const { nickname } = ctx.query;\r\n  ctx.store.dispatch({\r\n    type: GET_USER_BY_NICKNAME_REQUEST,\r\n    payload: {\r\n      nickname: nickname\r\n    }\r\n  });\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAUA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AADA;AACA;AAYA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}